"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_WebGLCanvas_js",{

/***/ "./components/ConnectorMaterial.js":
/*!*****************************************!*\
  !*** ./components/ConnectorMaterial.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectorMaterial: function() { return /* binding */ ConnectorMaterial; }\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-three/drei */ \"./node_modules/@react-three/drei/index.js\");\n\n\n// Define uniforms and shader code\n// Simplified version - inner and outer circle\nconst ConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_0__.shaderMaterial)(// Uniforms (inputs to the shader)\n{\n    u_radiusB: 0.4,\n    u_radiusA: 0.5,\n    u_spacing: 1.5,\n    u_center1: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0),\n    u_center2: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0),\n    u_resolution: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(1, 1)\n}, \"\\n    varying vec2 vUv;\\n    varying vec2 vWorldPos; // Pass world position\\n\\n    void main() {\\n      vUv = uv;\\n      // Calculate world position (assuming plane is at z=0)\\n      vec4 worldPos = modelMatrix * vec4(position, 1.0);\\n      vWorldPos = worldPos.xy;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    }\\n  \", \"\\n    varying vec2 vUv;\\n    varying vec2 vWorldPos;\\n\\n    uniform float u_radiusB; // Inner circle radius\\n    uniform float u_radiusA; // Outer circle radius\\n    uniform float u_spacing;\\n    uniform vec2 u_center1;\\n    uniform vec2 u_center2;\\n    uniform vec2 u_resolution;\\n\\n    void main() {\\n      // Get the pixel's world position\\n      vec2 p = vWorldPos;\\n\\n      // Calculate distance to center\\n      float dist = length(p);\\n      \\n      // Signed distance field for inner circle (radiusB)\\n      float innerCircleSDF = dist - u_radiusB;\\n      \\n      // Signed distance field for outer circle (radiusA)\\n      float outerCircleSDF = dist - u_radiusA;\\n      \\n      // Edge width for anti-aliasing\\n      float edgeWidth = 0.01;\\n      \\n      // Calculate alpha for inner circle (1.0 inside, 0.0 outside)\\n      float innerAlpha = 1.0 - smoothstep(-edgeWidth, edgeWidth, innerCircleSDF);\\n      \\n      // We'll draw the outer circle as a ring:\\n      // 1.0 between radiusB and radiusA, 0.0 elsewhere\\n      // First, get the area inside the outer circle\\n      float insideOuter = 1.0 - smoothstep(-edgeWidth, edgeWidth, outerCircleSDF);\\n      // Then subtract the inner circle area to create a ring\\n      float ringAlpha = insideOuter - innerAlpha;\\n      \\n      // Combine both shapes\\n      float finalAlpha = max(innerAlpha, ringAlpha * 0.5); // Make the ring semi-transparent\\n      \\n      // If nearly transparent, discard the pixel\\n      if (finalAlpha < 0.01) discard;\\n      \\n      // Create different colors for inner circle and ring\\n      vec3 innerColor = vec3(0.0); // Black for inner circle\\n      vec3 ringColor = vec3(0.3); // Dark gray for outer ring\\n      \\n      // Mix colors based on where we are\\n      vec3 color = mix(ringColor, innerColor, step(0.01, innerAlpha));\\n      \\n      // Output with calculated alpha\\n      gl_FragColor = vec4(color, finalAlpha);\\n    }\\n  \");\n// Add a unique key for HMR purposes with R3F\nConnectorMaterial.key = three__WEBPACK_IMPORTED_MODULE_1__.MathUtils.generateUUID();\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Nvbm5lY3Rvck1hdGVyaWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQjtBQUNvQjtBQUVuRCxrQ0FBa0M7QUFDbEMsOENBQThDO0FBRTlDLE1BQU1FLG9CQUFvQkQsaUVBQWNBLENBQ3RDLGtDQUFrQztBQUNsQztJQUNFRSxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsV0FBVztJQUNYQyxXQUFXLElBQUlOLDBDQUFhLENBQUMsR0FBRztJQUNoQ1EsV0FBVyxJQUFJUiwwQ0FBYSxDQUFDLEdBQUc7SUFDaENTLGNBQWMsSUFBSVQsMENBQWEsQ0FBQyxHQUFHO0FBQ3JDLEdBRVMsdVdBYUE7QUF3RFgsNkNBQTZDO0FBQzdDRSxrQkFBa0JRLEdBQUcsR0FBR1YsNENBQWUsQ0FBQ1ksWUFBWTtBQUV2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0Nvbm5lY3Rvck1hdGVyaWFsLmpzPzQxNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgc2hhZGVyTWF0ZXJpYWwgfSBmcm9tICdAcmVhY3QtdGhyZWUvZHJlaSc7XG5cbi8vIERlZmluZSB1bmlmb3JtcyBhbmQgc2hhZGVyIGNvZGVcbi8vIFNpbXBsaWZpZWQgdmVyc2lvbiAtIGlubmVyIGFuZCBvdXRlciBjaXJjbGVcblxuY29uc3QgQ29ubmVjdG9yTWF0ZXJpYWwgPSBzaGFkZXJNYXRlcmlhbChcbiAgLy8gVW5pZm9ybXMgKGlucHV0cyB0byB0aGUgc2hhZGVyKVxuICB7XG4gICAgdV9yYWRpdXNCOiAwLjQsIC8vIElubmVyIGNpcmNsZSByYWRpdXNcbiAgICB1X3JhZGl1c0E6IDAuNSwgLy8gT3V0ZXIgY2lyY2xlIHJhZGl1c1xuICAgIHVfc3BhY2luZzogMS41LFxuICAgIHVfY2VudGVyMTogbmV3IFRIUkVFLlZlY3RvcjIoMCwgMCksXG4gICAgdV9jZW50ZXIyOiBuZXcgVEhSRUUuVmVjdG9yMigwLCAwKSxcbiAgICB1X3Jlc29sdXRpb246IG5ldyBUSFJFRS5WZWN0b3IyKDEsIDEpLFxuICB9LFxuICAvLyBWZXJ0ZXggU2hhZGVyICh1c3VhbGx5IHNpbXBsZSBmb3IgMkQgcGxhbmVzKVxuICAvKmdsc2wqL2BcbiAgICB2YXJ5aW5nIHZlYzIgdlV2O1xuICAgIHZhcnlpbmcgdmVjMiB2V29ybGRQb3M7IC8vIFBhc3Mgd29ybGQgcG9zaXRpb25cblxuICAgIHZvaWQgbWFpbigpIHtcbiAgICAgIHZVdiA9IHV2O1xuICAgICAgLy8gQ2FsY3VsYXRlIHdvcmxkIHBvc2l0aW9uIChhc3N1bWluZyBwbGFuZSBpcyBhdCB6PTApXG4gICAgICB2ZWM0IHdvcmxkUG9zID0gbW9kZWxNYXRyaXggKiB2ZWM0KHBvc2l0aW9uLCAxLjApO1xuICAgICAgdldvcmxkUG9zID0gd29ybGRQb3MueHk7XG4gICAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KHBvc2l0aW9uLCAxLjApO1xuICAgIH1cbiAgYCxcbiAgLy8gRnJhZ21lbnQgU2hhZGVyIC0gd2l0aCBpbm5lciBhbmQgb3V0ZXIgY2lyY2xlc1xuICAvKmdsc2wqL2BcbiAgICB2YXJ5aW5nIHZlYzIgdlV2O1xuICAgIHZhcnlpbmcgdmVjMiB2V29ybGRQb3M7XG5cbiAgICB1bmlmb3JtIGZsb2F0IHVfcmFkaXVzQjsgLy8gSW5uZXIgY2lyY2xlIHJhZGl1c1xuICAgIHVuaWZvcm0gZmxvYXQgdV9yYWRpdXNBOyAvLyBPdXRlciBjaXJjbGUgcmFkaXVzXG4gICAgdW5pZm9ybSBmbG9hdCB1X3NwYWNpbmc7XG4gICAgdW5pZm9ybSB2ZWMyIHVfY2VudGVyMTtcbiAgICB1bmlmb3JtIHZlYzIgdV9jZW50ZXIyO1xuICAgIHVuaWZvcm0gdmVjMiB1X3Jlc29sdXRpb247XG5cbiAgICB2b2lkIG1haW4oKSB7XG4gICAgICAvLyBHZXQgdGhlIHBpeGVsJ3Mgd29ybGQgcG9zaXRpb25cbiAgICAgIHZlYzIgcCA9IHZXb3JsZFBvcztcblxuICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlIHRvIGNlbnRlclxuICAgICAgZmxvYXQgZGlzdCA9IGxlbmd0aChwKTtcbiAgICAgIFxuICAgICAgLy8gU2lnbmVkIGRpc3RhbmNlIGZpZWxkIGZvciBpbm5lciBjaXJjbGUgKHJhZGl1c0IpXG4gICAgICBmbG9hdCBpbm5lckNpcmNsZVNERiA9IGRpc3QgLSB1X3JhZGl1c0I7XG4gICAgICBcbiAgICAgIC8vIFNpZ25lZCBkaXN0YW5jZSBmaWVsZCBmb3Igb3V0ZXIgY2lyY2xlIChyYWRpdXNBKVxuICAgICAgZmxvYXQgb3V0ZXJDaXJjbGVTREYgPSBkaXN0IC0gdV9yYWRpdXNBO1xuICAgICAgXG4gICAgICAvLyBFZGdlIHdpZHRoIGZvciBhbnRpLWFsaWFzaW5nXG4gICAgICBmbG9hdCBlZGdlV2lkdGggPSAwLjAxO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgYWxwaGEgZm9yIGlubmVyIGNpcmNsZSAoMS4wIGluc2lkZSwgMC4wIG91dHNpZGUpXG4gICAgICBmbG9hdCBpbm5lckFscGhhID0gMS4wIC0gc21vb3Roc3RlcCgtZWRnZVdpZHRoLCBlZGdlV2lkdGgsIGlubmVyQ2lyY2xlU0RGKTtcbiAgICAgIFxuICAgICAgLy8gV2UnbGwgZHJhdyB0aGUgb3V0ZXIgY2lyY2xlIGFzIGEgcmluZzpcbiAgICAgIC8vIDEuMCBiZXR3ZWVuIHJhZGl1c0IgYW5kIHJhZGl1c0EsIDAuMCBlbHNld2hlcmVcbiAgICAgIC8vIEZpcnN0LCBnZXQgdGhlIGFyZWEgaW5zaWRlIHRoZSBvdXRlciBjaXJjbGVcbiAgICAgIGZsb2F0IGluc2lkZU91dGVyID0gMS4wIC0gc21vb3Roc3RlcCgtZWRnZVdpZHRoLCBlZGdlV2lkdGgsIG91dGVyQ2lyY2xlU0RGKTtcbiAgICAgIC8vIFRoZW4gc3VidHJhY3QgdGhlIGlubmVyIGNpcmNsZSBhcmVhIHRvIGNyZWF0ZSBhIHJpbmdcbiAgICAgIGZsb2F0IHJpbmdBbHBoYSA9IGluc2lkZU91dGVyIC0gaW5uZXJBbHBoYTtcbiAgICAgIFxuICAgICAgLy8gQ29tYmluZSBib3RoIHNoYXBlc1xuICAgICAgZmxvYXQgZmluYWxBbHBoYSA9IG1heChpbm5lckFscGhhLCByaW5nQWxwaGEgKiAwLjUpOyAvLyBNYWtlIHRoZSByaW5nIHNlbWktdHJhbnNwYXJlbnRcbiAgICAgIFxuICAgICAgLy8gSWYgbmVhcmx5IHRyYW5zcGFyZW50LCBkaXNjYXJkIHRoZSBwaXhlbFxuICAgICAgaWYgKGZpbmFsQWxwaGEgPCAwLjAxKSBkaXNjYXJkO1xuICAgICAgXG4gICAgICAvLyBDcmVhdGUgZGlmZmVyZW50IGNvbG9ycyBmb3IgaW5uZXIgY2lyY2xlIGFuZCByaW5nXG4gICAgICB2ZWMzIGlubmVyQ29sb3IgPSB2ZWMzKDAuMCk7IC8vIEJsYWNrIGZvciBpbm5lciBjaXJjbGVcbiAgICAgIHZlYzMgcmluZ0NvbG9yID0gdmVjMygwLjMpOyAvLyBEYXJrIGdyYXkgZm9yIG91dGVyIHJpbmdcbiAgICAgIFxuICAgICAgLy8gTWl4IGNvbG9ycyBiYXNlZCBvbiB3aGVyZSB3ZSBhcmVcbiAgICAgIHZlYzMgY29sb3IgPSBtaXgocmluZ0NvbG9yLCBpbm5lckNvbG9yLCBzdGVwKDAuMDEsIGlubmVyQWxwaGEpKTtcbiAgICAgIFxuICAgICAgLy8gT3V0cHV0IHdpdGggY2FsY3VsYXRlZCBhbHBoYVxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgZmluYWxBbHBoYSk7XG4gICAgfVxuICBgXG4pO1xuXG4vLyBBZGQgYSB1bmlxdWUga2V5IGZvciBITVIgcHVycG9zZXMgd2l0aCBSM0ZcbkNvbm5lY3Rvck1hdGVyaWFsLmtleSA9IFRIUkVFLk1hdGhVdGlscy5nZW5lcmF0ZVVVSUQoKTtcblxuZXhwb3J0IHsgQ29ubmVjdG9yTWF0ZXJpYWwgfTsgIl0sIm5hbWVzIjpbIlRIUkVFIiwic2hhZGVyTWF0ZXJpYWwiLCJDb25uZWN0b3JNYXRlcmlhbCIsInVfcmFkaXVzQiIsInVfcmFkaXVzQSIsInVfc3BhY2luZyIsInVfY2VudGVyMSIsIlZlY3RvcjIiLCJ1X2NlbnRlcjIiLCJ1X3Jlc29sdXRpb24iLCJrZXkiLCJNYXRoVXRpbHMiLCJnZW5lcmF0ZVVVSUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/ConnectorMaterial.js\n"));

/***/ })

});