"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_WebGLCanvas_js",{

/***/ "./components/ConnectorMaterial.js":
/*!*****************************************!*\
  !*** ./components/ConnectorMaterial.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectorMaterial: function() { return /* binding */ ConnectorMaterial; }\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-three/drei */ \"./node_modules/@react-three/drei/index.js\");\n\n\n// Define uniforms and shader code\n// NOTE: The core shape calculation logic is implemented below\nconst ConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_0__.shaderMaterial)(// Uniforms (inputs to the shader)\n{\n    u_radiusB: 0.4,\n    u_radiusA: 0.5,\n    u_spacing: 1.5,\n    u_center1: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0),\n    u_center2: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0),\n    u_resolution: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(1, 1)\n}, \"\\n    varying vec2 vUv;\\n    varying vec2 vWorldPos; // Pass world position\\n\\n    void main() {\\n      vUv = uv;\\n      // Calculate world position (assuming plane is at z=0)\\n      vec4 worldPos = modelMatrix * vec4(position, 1.0);\\n      vWorldPos = worldPos.xy;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    }\\n  \", \"\\n    varying vec2 vUv; // UV coordinates (0 to 1 across the plane)\\n    varying vec2 vWorldPos; // Pixel's position in world space\\n\\n    uniform float u_radiusB;\\n    uniform float u_radiusA; // Used for the curve shape\\n    uniform float u_spacing;\\n    uniform vec2 u_center1;\\n    uniform vec2 u_center2;\\n    uniform vec2 u_resolution;\\n\\n    // Helper function for smooth minimum (useful for blending SDFs)\\n    float smin(float a, float b, float k) {\\n      float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\\n      return mix(b, a, h) - k * h * (1.0 - h);\\n    }\\n\\n    void main() {\\n      // Get the pixel's world position\\n      vec2 p = vWorldPos;\\n\\n      // Calculate distance to the centers\\n      float dist1 = distance(p, u_center1);\\n      float dist2 = distance(p, u_center2);\\n\\n      // 1. Check if inside Circle B (directly using u_radiusB)\\n      float circle1 = dist1 - u_radiusB;\\n      float circle2 = dist2 - u_radiusB;\\n      \\n      // Signed distance field for both circles (negative inside)\\n      float circlesSDF = min(circle1, circle2);\\n\\n      // 2. Create the connector shape\\n      // Get useful measurements\\n      vec2 midPoint = (u_center1 + u_center2) * 0.5;\\n      vec2 centerLine = u_center2 - u_center1;\\n      float centerDist = length(centerLine);\\n      vec2 direction = normalize(centerLine);\\n      \\n      // Calculate perpendicular distance to the center line\\n      float projection = dot(p - midPoint, direction);\\n      float distToLine = length(p - midPoint - projection * direction);\\n      \\n      // Connector bounds (distance from midpoint to just before the circle starts)\\n      float halfLength = centerDist * 0.5 - u_radiusB;\\n      \\n      // Create the concave shape using u_radiusA\\n      // Start with a basic shape\\n      float connectorShape = 1.0; // Default to outside\\n      \\n      if (abs(projection) < halfLength) {\\n        // Calculate the width based on position along the connector\\n        // The further from center, the narrower it gets\\n        float normalizedPos = abs(projection) / halfLength; // 0 at center, 1 at end\\n        \\n        // Concave formula: Use a blend of u_radiusA and u_radiusB\\n        // When u_radiusA > u_radiusB, create more concave connection\\n        float maxWidth = mix(u_radiusB, u_radiusA, 1.0 - normalizedPos);\\n        // Apply a curve function to create concavity\\n        float width = mix(u_radiusB * 0.8, maxWidth, pow(1.0 - normalizedPos, 2.0));\\n        \\n        // SDF for the connector - negative inside\\n        connectorShape = distToLine - width;\\n      }\\n\\n      // Combine the shapes using smooth min for a nice blend\\n      float k = 0.1; // Smoothing factor\\n      float finalShape = smin(circlesSDF, connectorShape, k);\\n\\n      // Determine color based on the SDF\\n      float edgeWidth = 0.01; // Anti-aliasing width\\n      float alpha = 1.0 - smoothstep(-edgeWidth, edgeWidth, finalShape);\\n\\n      if (alpha < 0.01) discard; // Transparent outside the shape\\n      \\n      gl_FragColor = vec4(vec3(0.0), alpha); // Black with calculated alpha\\n    }\\n  \");\n// Add a unique key for HMR purposes with R3F\nConnectorMaterial.key = three__WEBPACK_IMPORTED_MODULE_1__.MathUtils.generateUUID();\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Nvbm5lY3Rvck1hdGVyaWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQjtBQUNvQjtBQUVuRCxrQ0FBa0M7QUFDbEMsOERBQThEO0FBRTlELE1BQU1FLG9CQUFvQkQsaUVBQWNBLENBQ3RDLGtDQUFrQztBQUNsQztJQUNFRSxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsV0FBVztJQUNYQyxXQUFXLElBQUlOLDBDQUFhLENBQUMsR0FBRztJQUNoQ1EsV0FBVyxJQUFJUiwwQ0FBYSxDQUFDLEdBQUc7SUFDaENTLGNBQWMsSUFBSVQsMENBQWEsQ0FBQyxHQUFHO0FBQ3JDLEdBRVMsdVdBYUE7QUFnRlgsNkNBQTZDO0FBQzdDRSxrQkFBa0JRLEdBQUcsR0FBR1YsNENBQWUsQ0FBQ1ksWUFBWTtBQUV2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0Nvbm5lY3Rvck1hdGVyaWFsLmpzPzQxNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgc2hhZGVyTWF0ZXJpYWwgfSBmcm9tICdAcmVhY3QtdGhyZWUvZHJlaSc7XG5cbi8vIERlZmluZSB1bmlmb3JtcyBhbmQgc2hhZGVyIGNvZGVcbi8vIE5PVEU6IFRoZSBjb3JlIHNoYXBlIGNhbGN1bGF0aW9uIGxvZ2ljIGlzIGltcGxlbWVudGVkIGJlbG93XG5cbmNvbnN0IENvbm5lY3Rvck1hdGVyaWFsID0gc2hhZGVyTWF0ZXJpYWwoXG4gIC8vIFVuaWZvcm1zIChpbnB1dHMgdG8gdGhlIHNoYWRlcilcbiAge1xuICAgIHVfcmFkaXVzQjogMC40LFxuICAgIHVfcmFkaXVzQTogMC41LFxuICAgIHVfc3BhY2luZzogMS41LFxuICAgIHVfY2VudGVyMTogbmV3IFRIUkVFLlZlY3RvcjIoMCwgMCksIC8vIFdpbGwgYmUgdXBkYXRlZFxuICAgIHVfY2VudGVyMjogbmV3IFRIUkVFLlZlY3RvcjIoMCwgMCksIC8vIFdpbGwgYmUgdXBkYXRlZFxuICAgIHVfcmVzb2x1dGlvbjogbmV3IFRIUkVFLlZlY3RvcjIoMSwgMSksIC8vIE9wdGlvbmFsOiBzY3JlZW4gcmVzb2x1dGlvbiBpZiBuZWVkZWRcbiAgfSxcbiAgLy8gVmVydGV4IFNoYWRlciAodXN1YWxseSBzaW1wbGUgZm9yIDJEIHBsYW5lcylcbiAgLypnbHNsKi9gXG4gICAgdmFyeWluZyB2ZWMyIHZVdjtcbiAgICB2YXJ5aW5nIHZlYzIgdldvcmxkUG9zOyAvLyBQYXNzIHdvcmxkIHBvc2l0aW9uXG5cbiAgICB2b2lkIG1haW4oKSB7XG4gICAgICB2VXYgPSB1djtcbiAgICAgIC8vIENhbGN1bGF0ZSB3b3JsZCBwb3NpdGlvbiAoYXNzdW1pbmcgcGxhbmUgaXMgYXQgej0wKVxuICAgICAgdmVjNCB3b3JsZFBvcyA9IG1vZGVsTWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcbiAgICAgIHZXb3JsZFBvcyA9IHdvcmxkUG9zLnh5O1xuICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcbiAgICB9XG4gIGAsXG4gIC8vIEZyYWdtZW50IFNoYWRlciAod2hlcmUgdGhlIG1hZ2ljIGhhcHBlbnMpXG4gIC8qZ2xzbCovYFxuICAgIHZhcnlpbmcgdmVjMiB2VXY7IC8vIFVWIGNvb3JkaW5hdGVzICgwIHRvIDEgYWNyb3NzIHRoZSBwbGFuZSlcbiAgICB2YXJ5aW5nIHZlYzIgdldvcmxkUG9zOyAvLyBQaXhlbCdzIHBvc2l0aW9uIGluIHdvcmxkIHNwYWNlXG5cbiAgICB1bmlmb3JtIGZsb2F0IHVfcmFkaXVzQjtcbiAgICB1bmlmb3JtIGZsb2F0IHVfcmFkaXVzQTsgLy8gVXNlZCBmb3IgdGhlIGN1cnZlIHNoYXBlXG4gICAgdW5pZm9ybSBmbG9hdCB1X3NwYWNpbmc7XG4gICAgdW5pZm9ybSB2ZWMyIHVfY2VudGVyMTtcbiAgICB1bmlmb3JtIHZlYzIgdV9jZW50ZXIyO1xuICAgIHVuaWZvcm0gdmVjMiB1X3Jlc29sdXRpb247XG5cbiAgICAvLyBIZWxwZXIgZnVuY3Rpb24gZm9yIHNtb290aCBtaW5pbXVtICh1c2VmdWwgZm9yIGJsZW5kaW5nIFNERnMpXG4gICAgZmxvYXQgc21pbihmbG9hdCBhLCBmbG9hdCBiLCBmbG9hdCBrKSB7XG4gICAgICBmbG9hdCBoID0gY2xhbXAoMC41ICsgMC41ICogKGIgLSBhKSAvIGssIDAuMCwgMS4wKTtcbiAgICAgIHJldHVybiBtaXgoYiwgYSwgaCkgLSBrICogaCAqICgxLjAgLSBoKTtcbiAgICB9XG5cbiAgICB2b2lkIG1haW4oKSB7XG4gICAgICAvLyBHZXQgdGhlIHBpeGVsJ3Mgd29ybGQgcG9zaXRpb25cbiAgICAgIHZlYzIgcCA9IHZXb3JsZFBvcztcblxuICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlIHRvIHRoZSBjZW50ZXJzXG4gICAgICBmbG9hdCBkaXN0MSA9IGRpc3RhbmNlKHAsIHVfY2VudGVyMSk7XG4gICAgICBmbG9hdCBkaXN0MiA9IGRpc3RhbmNlKHAsIHVfY2VudGVyMik7XG5cbiAgICAgIC8vIDEuIENoZWNrIGlmIGluc2lkZSBDaXJjbGUgQiAoZGlyZWN0bHkgdXNpbmcgdV9yYWRpdXNCKVxuICAgICAgZmxvYXQgY2lyY2xlMSA9IGRpc3QxIC0gdV9yYWRpdXNCO1xuICAgICAgZmxvYXQgY2lyY2xlMiA9IGRpc3QyIC0gdV9yYWRpdXNCO1xuICAgICAgXG4gICAgICAvLyBTaWduZWQgZGlzdGFuY2UgZmllbGQgZm9yIGJvdGggY2lyY2xlcyAobmVnYXRpdmUgaW5zaWRlKVxuICAgICAgZmxvYXQgY2lyY2xlc1NERiA9IG1pbihjaXJjbGUxLCBjaXJjbGUyKTtcblxuICAgICAgLy8gMi4gQ3JlYXRlIHRoZSBjb25uZWN0b3Igc2hhcGVcbiAgICAgIC8vIEdldCB1c2VmdWwgbWVhc3VyZW1lbnRzXG4gICAgICB2ZWMyIG1pZFBvaW50ID0gKHVfY2VudGVyMSArIHVfY2VudGVyMikgKiAwLjU7XG4gICAgICB2ZWMyIGNlbnRlckxpbmUgPSB1X2NlbnRlcjIgLSB1X2NlbnRlcjE7XG4gICAgICBmbG9hdCBjZW50ZXJEaXN0ID0gbGVuZ3RoKGNlbnRlckxpbmUpO1xuICAgICAgdmVjMiBkaXJlY3Rpb24gPSBub3JtYWxpemUoY2VudGVyTGluZSk7XG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSBwZXJwZW5kaWN1bGFyIGRpc3RhbmNlIHRvIHRoZSBjZW50ZXIgbGluZVxuICAgICAgZmxvYXQgcHJvamVjdGlvbiA9IGRvdChwIC0gbWlkUG9pbnQsIGRpcmVjdGlvbik7XG4gICAgICBmbG9hdCBkaXN0VG9MaW5lID0gbGVuZ3RoKHAgLSBtaWRQb2ludCAtIHByb2plY3Rpb24gKiBkaXJlY3Rpb24pO1xuICAgICAgXG4gICAgICAvLyBDb25uZWN0b3IgYm91bmRzIChkaXN0YW5jZSBmcm9tIG1pZHBvaW50IHRvIGp1c3QgYmVmb3JlIHRoZSBjaXJjbGUgc3RhcnRzKVxuICAgICAgZmxvYXQgaGFsZkxlbmd0aCA9IGNlbnRlckRpc3QgKiAwLjUgLSB1X3JhZGl1c0I7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSB0aGUgY29uY2F2ZSBzaGFwZSB1c2luZyB1X3JhZGl1c0FcbiAgICAgIC8vIFN0YXJ0IHdpdGggYSBiYXNpYyBzaGFwZVxuICAgICAgZmxvYXQgY29ubmVjdG9yU2hhcGUgPSAxLjA7IC8vIERlZmF1bHQgdG8gb3V0c2lkZVxuICAgICAgXG4gICAgICBpZiAoYWJzKHByb2plY3Rpb24pIDwgaGFsZkxlbmd0aCkge1xuICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIHdpZHRoIGJhc2VkIG9uIHBvc2l0aW9uIGFsb25nIHRoZSBjb25uZWN0b3JcbiAgICAgICAgLy8gVGhlIGZ1cnRoZXIgZnJvbSBjZW50ZXIsIHRoZSBuYXJyb3dlciBpdCBnZXRzXG4gICAgICAgIGZsb2F0IG5vcm1hbGl6ZWRQb3MgPSBhYnMocHJvamVjdGlvbikgLyBoYWxmTGVuZ3RoOyAvLyAwIGF0IGNlbnRlciwgMSBhdCBlbmRcbiAgICAgICAgXG4gICAgICAgIC8vIENvbmNhdmUgZm9ybXVsYTogVXNlIGEgYmxlbmQgb2YgdV9yYWRpdXNBIGFuZCB1X3JhZGl1c0JcbiAgICAgICAgLy8gV2hlbiB1X3JhZGl1c0EgPiB1X3JhZGl1c0IsIGNyZWF0ZSBtb3JlIGNvbmNhdmUgY29ubmVjdGlvblxuICAgICAgICBmbG9hdCBtYXhXaWR0aCA9IG1peCh1X3JhZGl1c0IsIHVfcmFkaXVzQSwgMS4wIC0gbm9ybWFsaXplZFBvcyk7XG4gICAgICAgIC8vIEFwcGx5IGEgY3VydmUgZnVuY3Rpb24gdG8gY3JlYXRlIGNvbmNhdml0eVxuICAgICAgICBmbG9hdCB3aWR0aCA9IG1peCh1X3JhZGl1c0IgKiAwLjgsIG1heFdpZHRoLCBwb3coMS4wIC0gbm9ybWFsaXplZFBvcywgMi4wKSk7XG4gICAgICAgIFxuICAgICAgICAvLyBTREYgZm9yIHRoZSBjb25uZWN0b3IgLSBuZWdhdGl2ZSBpbnNpZGVcbiAgICAgICAgY29ubmVjdG9yU2hhcGUgPSBkaXN0VG9MaW5lIC0gd2lkdGg7XG4gICAgICB9XG5cbiAgICAgIC8vIENvbWJpbmUgdGhlIHNoYXBlcyB1c2luZyBzbW9vdGggbWluIGZvciBhIG5pY2UgYmxlbmRcbiAgICAgIGZsb2F0IGsgPSAwLjE7IC8vIFNtb290aGluZyBmYWN0b3JcbiAgICAgIGZsb2F0IGZpbmFsU2hhcGUgPSBzbWluKGNpcmNsZXNTREYsIGNvbm5lY3RvclNoYXBlLCBrKTtcblxuICAgICAgLy8gRGV0ZXJtaW5lIGNvbG9yIGJhc2VkIG9uIHRoZSBTREZcbiAgICAgIGZsb2F0IGVkZ2VXaWR0aCA9IDAuMDE7IC8vIEFudGktYWxpYXNpbmcgd2lkdGhcbiAgICAgIGZsb2F0IGFscGhhID0gMS4wIC0gc21vb3Roc3RlcCgtZWRnZVdpZHRoLCBlZGdlV2lkdGgsIGZpbmFsU2hhcGUpO1xuXG4gICAgICBpZiAoYWxwaGEgPCAwLjAxKSBkaXNjYXJkOyAvLyBUcmFuc3BhcmVudCBvdXRzaWRlIHRoZSBzaGFwZVxuICAgICAgXG4gICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZlYzMoMC4wKSwgYWxwaGEpOyAvLyBCbGFjayB3aXRoIGNhbGN1bGF0ZWQgYWxwaGFcbiAgICB9XG4gIGBcbik7XG5cbi8vIEFkZCBhIHVuaXF1ZSBrZXkgZm9yIEhNUiBwdXJwb3NlcyB3aXRoIFIzRlxuQ29ubmVjdG9yTWF0ZXJpYWwua2V5ID0gVEhSRUUuTWF0aFV0aWxzLmdlbmVyYXRlVVVJRCgpO1xuXG5leHBvcnQgeyBDb25uZWN0b3JNYXRlcmlhbCB9OyAiXSwibmFtZXMiOlsiVEhSRUUiLCJzaGFkZXJNYXRlcmlhbCIsIkNvbm5lY3Rvck1hdGVyaWFsIiwidV9yYWRpdXNCIiwidV9yYWRpdXNBIiwidV9zcGFjaW5nIiwidV9jZW50ZXIxIiwiVmVjdG9yMiIsInVfY2VudGVyMiIsInVfcmVzb2x1dGlvbiIsImtleSIsIk1hdGhVdGlscyIsImdlbmVyYXRlVVVJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/ConnectorMaterial.js\n"));

/***/ })

});