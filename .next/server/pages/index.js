/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./styles/Home.module.css":
/*!********************************!*\
  !*** ./styles/Home.module.css ***!
  \********************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"container\": \"Home_container__d256j\",\n\t\"main\": \"Home_main__VkIEL\",\n\t\"title\": \"Home_title__hYX6j\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvSG9tZS5tb2R1bGUuY3NzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsLWRvdC1ncmlkLW12cC8uL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3M/YmMyMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJjb250YWluZXJcIjogXCJIb21lX2NvbnRhaW5lcl9fZDI1NmpcIixcblx0XCJtYWluXCI6IFwiSG9tZV9tYWluX19Wa0lFTFwiLFxuXHRcInRpdGxlXCI6IFwiSG9tZV90aXRsZV9faFlYNmpcIlxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/Home.module.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module.compiled */ \"./node_modules/next/dist/server/future/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"./node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"./node_modules/next/dist/pages/_app.js\");\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _pages_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_index_js__WEBPACK_IMPORTED_MODULE_5__]);\n_pages_index_js__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"default\"));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"getStaticProps\");\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"getStaticPaths\");\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"getServerSideProps\");\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"config\");\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"reportWebVitals\");\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticProps\");\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticPaths\");\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticParams\");\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerProps\");\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/index\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App: (private_next_pages_app__WEBPACK_IMPORTED_MODULE_4___default()),\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _pages_index_js__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTJnBhZ2U9JTJGJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZpbmRleC5qcyZhYnNvbHV0ZUFwcFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZhYnNvbHV0ZURvY3VtZW50UGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZG9jdW1lbnQmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErRjtBQUNoQztBQUNMO0FBQzFEO0FBQ29EO0FBQ1Y7QUFDMUM7QUFDNkM7QUFDN0M7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDRDQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLHVCQUF1Qix3RUFBSyxDQUFDLDRDQUFRO0FBQ3JDLHVCQUF1Qix3RUFBSyxDQUFDLDRDQUFRO0FBQ3JDLDJCQUEyQix3RUFBSyxDQUFDLDRDQUFRO0FBQ3pDLGVBQWUsd0VBQUssQ0FBQyw0Q0FBUTtBQUM3Qix3QkFBd0Isd0VBQUssQ0FBQyw0Q0FBUTtBQUM3QztBQUNPLGdDQUFnQyx3RUFBSyxDQUFDLDRDQUFRO0FBQzlDLGdDQUFnQyx3RUFBSyxDQUFDLDRDQUFRO0FBQzlDLGlDQUFpQyx3RUFBSyxDQUFDLDRDQUFRO0FBQy9DLGdDQUFnQyx3RUFBSyxDQUFDLDRDQUFRO0FBQzlDLG9DQUFvQyx3RUFBSyxDQUFDLDRDQUFRO0FBQ3pEO0FBQ08sd0JBQXdCLHlHQUFnQjtBQUMvQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVc7QUFDWCxnQkFBZ0I7QUFDaEIsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELGlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2wtZG90LWdyaWQtbXZwLz8xNDNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgYXBwIGFuZCBkb2N1bWVudCBtb2R1bGVzLlxuaW1wb3J0IERvY3VtZW50IGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2RvY3VtZW50XCI7XG5pbXBvcnQgQXBwIGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2FwcFwiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvaW5kZXguanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgY29tcG9uZW50IChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcImdldFN0YXRpY1Byb3BzXCIpO1xuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUGF0aHNcIik7XG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U2VydmVyU2lkZVByb3BzXCIpO1xuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbmV4cG9ydCBjb25zdCByZXBvcnRXZWJWaXRhbHMgPSBob2lzdCh1c2VybGFuZCwgXCJyZXBvcnRXZWJWaXRhbHNcIik7XG4vLyBSZS1leHBvcnQgbGVnYWN5IG1ldGhvZHMuXG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U3RhdGljUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgXCJ1bnN0YWJsZV9nZXRTdGF0aWNQcm9wc1wiKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhdGhzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhcmFtcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhcmFtc1wiKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTZXJ2ZXJQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclByb3BzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wc1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTLFxuICAgICAgICBwYWdlOiBcIi9pbmRleFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgQXBwLFxuICAgICAgICBEb2N1bWVudFxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "./components/CircleMaterial.tsx":
/*!***************************************!*\
  !*** ./components/CircleMaterial.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"@react-three/fiber\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Simple vertex shader\nconst vertexShader = /*glsl*/ `\n  varying vec2 vUv;\n  attribute float a_activated; // Will be used in Feature 4\n  varying float v_activated;   // Will be used in Feature 4\n  void main() {\n    vUv = uv;\n    v_activated = a_activated; // Pass activation state\n    gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position, 1.0);\n  }\n`;\n// Fragment shader to draw two concentric circles\nconst fragmentShader = /*glsl*/ `\n  uniform float u_radiusA;      // Outer radius (scaled relative to instance size)\n  uniform float u_radiusB;      // Inner radius (scaled relative to instance size)\n  uniform vec3 u_bgColor;       // Background color (or transparent)\n  uniform vec3 u_outerColor;    // Color of the outer ring\n  uniform vec3 u_innerColorEmpty; // Color of the inner circle when inactive\n  uniform vec3 u_innerColorActive;// Color of the inner circle when active\n\n  varying vec2 vUv;\n  varying float v_activated; // Read from vertex shader (comes from a_activated attribute)\n\n  void main() {\n    float dist = distance(vUv, vec2(0.5));\n\n    // Discard if outside the outer circle\n    if (dist > u_radiusA) {\n        discard;\n    }\n\n    // Check activation state first\n    if (v_activated == 1.0) {\n        // If activated, only draw the inner circle (black)\n        if (dist <= u_radiusB) {\n            gl_FragColor = vec4(u_innerColorActive, 1.0); // Solid black inner circle\n        } else {\n            discard; // Make outer ring transparent when activated\n        }\n    } else {\n        // Not activated - draw both inner and outer circles\n        if (dist > u_radiusB) {\n            // In the outer ring\n            gl_FragColor = vec4(u_outerColor, 1.0);\n        } else {\n            // In the inner circle - empty/inactive\n            gl_FragColor = vec4(u_innerColorEmpty, 1.0);\n        }\n    }\n  }\n`;\n// Create the shader material using drei/shaderMaterial\nconst CircleMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_1__.shaderMaterial)({\n    u_radiusA: 0.5,\n    u_radiusB: 0.4,\n    u_bgColor: new three__WEBPACK_IMPORTED_MODULE_0__.Color(\"#ffffff\"),\n    u_outerColor: new three__WEBPACK_IMPORTED_MODULE_0__.Color(\"#cccccc\"),\n    u_innerColorEmpty: new three__WEBPACK_IMPORTED_MODULE_0__.Color(\"#ffffff\"),\n    u_innerColorActive: new three__WEBPACK_IMPORTED_MODULE_0__.Color(\"#000000\")\n}, vertexShader, fragmentShader);\n// Extend R3F to recognize the material\n(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.extend)({\n    CircleMaterial\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CircleMaterial);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0NpcmNsZU1hdGVyaWFsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBK0I7QUFDb0I7QUFDUDtBQUU1Qyx1QkFBdUI7QUFDdkIsTUFBTUcsZUFBZSxNQUFNLEdBQUcsQ0FBQzs7Ozs7Ozs7O0FBUy9CLENBQUM7QUFFRCxpREFBaUQ7QUFDakQsTUFBTUMsaUJBQWlCLE1BQU0sR0FBRyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNDakMsQ0FBQztBQUVELHVEQUF1RDtBQUN2RCxNQUFNQyxpQkFBaUJKLGlFQUFjQSxDQUNuQztJQUNFSyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsV0FBVyxJQUFJUix3Q0FBVyxDQUFDO0lBQzNCVSxjQUFjLElBQUlWLHdDQUFXLENBQUM7SUFDOUJXLG1CQUFtQixJQUFJWCx3Q0FBVyxDQUFDO0lBQ25DWSxvQkFBb0IsSUFBSVosd0NBQVcsQ0FBQztBQUN0QyxHQUNBRyxjQUNBQztBQUdGLHVDQUF1QztBQUN2Q0YsMERBQU1BLENBQUM7SUFBRUc7QUFBZTtBQVd4QixpRUFBZUEsY0FBY0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsLWRvdC1ncmlkLW12cC8uL2NvbXBvbmVudHMvQ2lyY2xlTWF0ZXJpYWwudHN4PzQyNTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgc2hhZGVyTWF0ZXJpYWwgfSBmcm9tICdAcmVhY3QtdGhyZWUvZHJlaSc7XG5pbXBvcnQgeyBleHRlbmQgfSBmcm9tICdAcmVhY3QtdGhyZWUvZmliZXInO1xuXG4vLyBTaW1wbGUgdmVydGV4IHNoYWRlclxuY29uc3QgdmVydGV4U2hhZGVyID0gLypnbHNsKi8gYFxuICB2YXJ5aW5nIHZlYzIgdlV2O1xuICBhdHRyaWJ1dGUgZmxvYXQgYV9hY3RpdmF0ZWQ7IC8vIFdpbGwgYmUgdXNlZCBpbiBGZWF0dXJlIDRcbiAgdmFyeWluZyBmbG9hdCB2X2FjdGl2YXRlZDsgICAvLyBXaWxsIGJlIHVzZWQgaW4gRmVhdHVyZSA0XG4gIHZvaWQgbWFpbigpIHtcbiAgICB2VXYgPSB1djtcbiAgICB2X2FjdGl2YXRlZCA9IGFfYWN0aXZhdGVkOyAvLyBQYXNzIGFjdGl2YXRpb24gc3RhdGVcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiBpbnN0YW5jZU1hdHJpeCAqIHZlYzQocG9zaXRpb24sIDEuMCk7XG4gIH1cbmA7XG5cbi8vIEZyYWdtZW50IHNoYWRlciB0byBkcmF3IHR3byBjb25jZW50cmljIGNpcmNsZXNcbmNvbnN0IGZyYWdtZW50U2hhZGVyID0gLypnbHNsKi8gYFxuICB1bmlmb3JtIGZsb2F0IHVfcmFkaXVzQTsgICAgICAvLyBPdXRlciByYWRpdXMgKHNjYWxlZCByZWxhdGl2ZSB0byBpbnN0YW5jZSBzaXplKVxuICB1bmlmb3JtIGZsb2F0IHVfcmFkaXVzQjsgICAgICAvLyBJbm5lciByYWRpdXMgKHNjYWxlZCByZWxhdGl2ZSB0byBpbnN0YW5jZSBzaXplKVxuICB1bmlmb3JtIHZlYzMgdV9iZ0NvbG9yOyAgICAgICAvLyBCYWNrZ3JvdW5kIGNvbG9yIChvciB0cmFuc3BhcmVudClcbiAgdW5pZm9ybSB2ZWMzIHVfb3V0ZXJDb2xvcjsgICAgLy8gQ29sb3Igb2YgdGhlIG91dGVyIHJpbmdcbiAgdW5pZm9ybSB2ZWMzIHVfaW5uZXJDb2xvckVtcHR5OyAvLyBDb2xvciBvZiB0aGUgaW5uZXIgY2lyY2xlIHdoZW4gaW5hY3RpdmVcbiAgdW5pZm9ybSB2ZWMzIHVfaW5uZXJDb2xvckFjdGl2ZTsvLyBDb2xvciBvZiB0aGUgaW5uZXIgY2lyY2xlIHdoZW4gYWN0aXZlXG5cbiAgdmFyeWluZyB2ZWMyIHZVdjtcbiAgdmFyeWluZyBmbG9hdCB2X2FjdGl2YXRlZDsgLy8gUmVhZCBmcm9tIHZlcnRleCBzaGFkZXIgKGNvbWVzIGZyb20gYV9hY3RpdmF0ZWQgYXR0cmlidXRlKVxuXG4gIHZvaWQgbWFpbigpIHtcbiAgICBmbG9hdCBkaXN0ID0gZGlzdGFuY2UodlV2LCB2ZWMyKDAuNSkpO1xuXG4gICAgLy8gRGlzY2FyZCBpZiBvdXRzaWRlIHRoZSBvdXRlciBjaXJjbGVcbiAgICBpZiAoZGlzdCA+IHVfcmFkaXVzQSkge1xuICAgICAgICBkaXNjYXJkO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGFjdGl2YXRpb24gc3RhdGUgZmlyc3RcbiAgICBpZiAodl9hY3RpdmF0ZWQgPT0gMS4wKSB7XG4gICAgICAgIC8vIElmIGFjdGl2YXRlZCwgb25seSBkcmF3IHRoZSBpbm5lciBjaXJjbGUgKGJsYWNrKVxuICAgICAgICBpZiAoZGlzdCA8PSB1X3JhZGl1c0IpIHtcbiAgICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQodV9pbm5lckNvbG9yQWN0aXZlLCAxLjApOyAvLyBTb2xpZCBibGFjayBpbm5lciBjaXJjbGVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRpc2NhcmQ7IC8vIE1ha2Ugb3V0ZXIgcmluZyB0cmFuc3BhcmVudCB3aGVuIGFjdGl2YXRlZFxuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTm90IGFjdGl2YXRlZCAtIGRyYXcgYm90aCBpbm5lciBhbmQgb3V0ZXIgY2lyY2xlc1xuICAgICAgICBpZiAoZGlzdCA+IHVfcmFkaXVzQikge1xuICAgICAgICAgICAgLy8gSW4gdGhlIG91dGVyIHJpbmdcbiAgICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQodV9vdXRlckNvbG9yLCAxLjApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gSW4gdGhlIGlubmVyIGNpcmNsZSAtIGVtcHR5L2luYWN0aXZlXG4gICAgICAgICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHVfaW5uZXJDb2xvckVtcHR5LCAxLjApO1xuICAgICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG4vLyBDcmVhdGUgdGhlIHNoYWRlciBtYXRlcmlhbCB1c2luZyBkcmVpL3NoYWRlck1hdGVyaWFsXG5jb25zdCBDaXJjbGVNYXRlcmlhbCA9IHNoYWRlck1hdGVyaWFsKFxuICB7XG4gICAgdV9yYWRpdXNBOiAwLjUsIC8vIERlZmF1bHQgdmFsdWUsIHdpbGwgYmUgdXBkYXRlZFxuICAgIHVfcmFkaXVzQjogMC40LCAvLyBEZWZhdWx0IHZhbHVlLCB3aWxsIGJlIHVwZGF0ZWRcbiAgICB1X2JnQ29sb3I6IG5ldyBUSFJFRS5Db2xvcignI2ZmZmZmZicpLCAvLyBEZWZhdWx0IGJnXG4gICAgdV9vdXRlckNvbG9yOiBuZXcgVEhSRUUuQ29sb3IoJyNjY2NjY2MnKSwgLy8gTGlnaHQgZ3JleSBvdXRlciByaW5nXG4gICAgdV9pbm5lckNvbG9yRW1wdHk6IG5ldyBUSFJFRS5Db2xvcignI2ZmZmZmZicpLCAvLyBXaGl0ZS90cmFuc3BhcmVudCBpbm5lciBlbXB0eVxuICAgIHVfaW5uZXJDb2xvckFjdGl2ZTogbmV3IFRIUkVFLkNvbG9yKCcjMDAwMDAwJyksIC8vIEJsYWNrIGlubmVyIGFjdGl2ZVxuICB9LFxuICB2ZXJ0ZXhTaGFkZXIsXG4gIGZyYWdtZW50U2hhZGVyXG4pO1xuXG4vLyBFeHRlbmQgUjNGIHRvIHJlY29nbml6ZSB0aGUgbWF0ZXJpYWxcbmV4dGVuZCh7IENpcmNsZU1hdGVyaWFsIH0pO1xuXG4vLyBEZWZpbmUgVHlwZVNjcmlwdCB0eXBlIGZvciBKU1ggdXNhZ2VcbmRlY2xhcmUgZ2xvYmFsIHtcbiAgbmFtZXNwYWNlIEpTWCB7XG4gICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgIGNpcmNsZU1hdGVyaWFsOiBhbnk7IC8vIFVzZSBcXCdhbnlcXCcgb3IgZGVmaW5lIG1vcmUgc3BlY2lmaWMgdHlwZXNcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2lyY2xlTWF0ZXJpYWw7ICJdLCJuYW1lcyI6WyJUSFJFRSIsInNoYWRlck1hdGVyaWFsIiwiZXh0ZW5kIiwidmVydGV4U2hhZGVyIiwiZnJhZ21lbnRTaGFkZXIiLCJDaXJjbGVNYXRlcmlhbCIsInVfcmFkaXVzQSIsInVfcmFkaXVzQiIsInVfYmdDb2xvciIsIkNvbG9yIiwidV9vdXRlckNvbG9yIiwidV9pbm5lckNvbG9yRW1wdHkiLCJ1X2lubmVyQ29sb3JBY3RpdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/CircleMaterial.tsx\n");

/***/ }),

/***/ "./components/CmdHorizConnectorMaterial.tsx":
/*!**************************************************!*\
  !*** ./components/CmdHorizConnectorMaterial.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"@react-three/fiber\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Constants from GridScene/ConnectorMaterial needed for calculations\nconst BASE_RADIUS_A = 0.5; // Outer radius relative to spacing=1\nconst BASE_RADIUS_B = 0.4; // Inner radius relative to spacing=1\nconst FIXED_SPACING = BASE_RADIUS_A + BASE_RADIUS_B; // 0.9\n// Vertex shader: Pass UVs (same as ConnectorMaterial)\nconst vertexShader = /*glsl*/ `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n// Fragment shader: Only for Cmd-Click Horizontal Connectors\nconst fragmentShader = /*glsl*/ `\n  uniform sampler2D u_stateTexture;             // Need state to confirm circles are active\n  uniform sampler2D u_cmdHorizConnectorTexture; // Texture for cmd-click horizontal connectors\n  uniform vec2 u_gridDimensions;            // Grid size (width, height) in cells\n  uniform vec2 u_textureResolution;         // State Texture size (width, height) in pixels\n  uniform float u_radiusA;                  // Outer radius (base value)\n  uniform float u_radiusB;                  // Inner radius (base value)\n  uniform float u_gridSpacing;              // Visual scale factor (from Leva)\n  // World space uniforms\n  uniform vec2 u_centerOffset;              // World offset for centering grid\n  uniform vec2 u_planeSize;                 // World size of connector plane\n\n  varying vec2 vUv;\n\n  // --- SDF Helper Functions ---\n  float sdCircle(vec2 p, float r) {\n    return length(p) - r;\n  }\n\n  // SDF function for rectangle with sharp corners\n  float sdBox2D(vec2 p, vec2 halfSize) {\n    vec2 d = abs(p) - halfSize;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n  }\n\n  // --- State Sampling Helper ---\n  float getState(ivec2 cellCoord) {\n    // Use u_textureResolution (size of stateTexture) for clamping\n    ivec2 clampedCoord = clamp(cellCoord, ivec2(0), ivec2(u_textureResolution) - ivec2(1));\n    if (cellCoord != clampedCoord) return 0.0;\n    return texelFetch(u_stateTexture, clampedCoord, 0).r;\n  }\n\n  // --- Cmd-Click Horizontal Connector Sampling ---\n  float getCmdHorizConnector(ivec2 cellCoord) {\n    // The cmd-horiz texture is (gridWidth-1) x gridHeight\n    ivec2 horizTextureSize = ivec2(u_gridDimensions.x - 1.0, u_gridDimensions.y);\n     // Check bounds against the actual size of the cmdHorizConnectorTexture\n    if (cellCoord.x < 0 || cellCoord.x >= horizTextureSize.x ||\n        cellCoord.y < 0 || cellCoord.y >= horizTextureSize.y) {\n      return 0.0;\n    }\n    // Fetch from the dedicated texture\n    return texelFetch(u_cmdHorizConnectorTexture, cellCoord, 0).r;\n  }\n\n  // --- Get Cell Center in World Space ---\n  vec2 getCellWorldCenter(ivec2 cell) {\n    // Using the fixed spacing value directly. Ensure this matches TS definition.\n    float fixedSpacingValue = 0.9; // Direct value of BASE_RADIUS_A + BASE_RADIUS_B\n    float worldX = float(cell.x) * fixedSpacingValue + u_centerOffset.x;\n    float worldY = float(cell.y) * fixedSpacingValue + u_centerOffset.y;\n    return vec2(worldX, worldY);\n  }\n\n  // --- Function to calculate SDF for a given row ---\n  float calculateConnectorSDF(ivec2 baseCell, vec2 fragPos, float worldRadA, float worldRadB) {\n    float sdf = 1e6; // Default to outside\n\n    float cmdConn = getCmdHorizConnector(baseCell);\n    if (cmdConn > 0.0) {\n        ivec2 rightCell = baseCell + ivec2(1, 0);\n        float stateL = getState(baseCell);\n        float stateR = getState(rightCell);\n\n        if (stateL == 1.0 && stateR == 1.0) {\n            vec2 centerL = getCellWorldCenter(baseCell);\n            vec2 centerR = getCellWorldCenter(rightCell);\n\n            vec2 connCenter = (centerL + centerR) * 0.5;\n            // REMOVED vertical shift: connCenter.y -= worldRadB * 0.15;\n\n            float connWidth = distance(centerL, centerR);\n            // Use inner radius (RadiusB) for thinner connector matching circle thickness\n            float connHeight = worldRadB * 2.0; // Changed from worldRadA to worldRadB\n\n            vec2 p = fragPos - connCenter;\n            // No rotation needed for axis-aligned horizontal box\n            // float angle = atan(centerR.y - centerL.y, centerR.x - centerL.x);\n            // float c = cos(-angle);\n            // float s = sin(-angle);\n            // p = vec2(c * p.x - s * p.y, s * p.x + c * p.y);\n\n            sdf = sdBox2D(p, vec2(connWidth * 0.5, connHeight * 0.5));\n        }\n    }\n    return sdf;\n  }\n\n\n  void main() {\n    // Calculate fragment's world position\n    vec2 planeOrigin = -u_planeSize * 0.5;\n    vec2 fragWorldPos = planeOrigin + vUv * u_planeSize;\n\n    // Determine the potential bottom-left cell based on floor\n    float fixedSpacingValue = 0.9;\n    vec2 gridCoord = (fragWorldPos - u_centerOffset) / fixedSpacingValue;\n    ivec2 cell_bl_current = ivec2(floor(gridCoord)); // Cell for the current row floor\n\n    // Define the cell for the row above\n    ivec2 cell_bl_above = cell_bl_current + ivec2(0, 1);\n\n    // Calculate world-space radii\n    float worldRadiusA = u_radiusA * u_gridSpacing;\n    float worldRadiusB = u_radiusB * u_gridSpacing;\n\n    // Calculate SDF for the connector potentially in the current row\n    float sdf_current = calculateConnectorSDF(cell_bl_current, fragWorldPos, worldRadiusA, worldRadiusB);\n\n    // Calculate SDF for the connector potentially in the row above\n    float sdf_above = calculateConnectorSDF(cell_bl_above, fragWorldPos, worldRadiusA, worldRadiusB);\n\n    // The final SDF is the minimum of the two (closest connector wins)\n    float finalSdf = min(sdf_current, sdf_above);\n\n    // Final Output: Draw if inside the combined SDF\n    if (finalSdf < 0.0) {\n      float smoothFactor = fwidth(finalSdf) * 0.8; // Anti-aliasing\n      float alpha = smoothstep(smoothFactor, -smoothFactor, finalSdf);\n\n      if (alpha > 0.01) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, alpha); // Black connector\n      } else {\n        discard; // Discard transparent fragments\n      }\n    } else {\n      discard; // Discard fragments outside the shape\n    }\n  }\n`;\n// Create the shader material\nconst CmdHorizConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_1__.shaderMaterial)({\n    u_stateTexture: null,\n    u_cmdHorizConnectorTexture: null,\n    u_gridDimensions: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(10, 10),\n    u_textureResolution: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(10, 10),\n    u_radiusA: BASE_RADIUS_A,\n    u_radiusB: BASE_RADIUS_B,\n    u_gridSpacing: 1.0,\n    u_centerOffset: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0),\n    u_planeSize: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(10, 10)\n}, vertexShader, fragmentShader);\n// Extend R3F\n(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.extend)({\n    CmdHorizConnectorMaterial\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CmdHorizConnectorMaterial);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/CmdHorizConnectorMaterial.tsx\n");

/***/ }),

/***/ "./components/ConnectorMaterial.tsx":
/*!******************************************!*\
  !*** ./components/ConnectorMaterial.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"@react-three/fiber\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Define constants matching GridScene for defaults\n// Moved to top to fix linter errors\nconst BASE_GRID_SPACING = 1.0;\nconst BASE_RADIUS_A = 0.5; // Outer radius relative to spacing=1\nconst BASE_RADIUS_B = 0.4; // Inner radius relative to spacing=1\n// Fixed spacing is BASE_RADIUS_A + BASE_RADIUS_B = 0.9\nconst FIXED_SPACING = BASE_RADIUS_A + BASE_RADIUS_B;\n// Define connector types as constants - must match GridScene.tsx\nconst CONNECTOR_NONE = 0;\nconst CONNECTOR_DIAG_TL_BR = 1; // Diagonal \\\nconst CONNECTOR_DIAG_BL_TR = 2; // Diagonal /\nconst CONNECTOR_HORIZ_T = 3; // Horizontal Top\nconst CONNECTOR_HORIZ_B = 4; // Horizontal Bottom\nconst CONNECTOR_HORIZ_CMD = 5; // New: Cmd-click horizontal connector\n// Vertex shader: Pass UVs\nconst vertexShader = /*glsl*/ `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n// Fragment shader: Updated to use world space coordinates\nconst fragmentShader = /*glsl*/ `\n  uniform sampler2D u_stateTexture;\n  uniform sampler2D u_intendedConnectorTexture;\n  uniform vec2 u_gridDimensions;    // Grid size (width, height) in cells\n  uniform vec2 u_textureResolution; // Texture size (width, height) in pixels\n  uniform float u_radiusA;          // Outer radius (base value)\n  uniform float u_radiusB;          // Inner radius (base value)\n  uniform float u_gridSpacing;      // Visual scale factor\n  // World space uniforms\n  uniform vec2 u_centerOffset;      // World offset for centering grid\n  uniform vec2 u_planeSize;         // World size of connector plane\n\n  varying vec2 vUv;\n\n  // --- SDF Helper Functions ---\n  float sdCircle(vec2 p, float r) {\n    return length(p) - r;\n  }\n\n  float sdBox(vec2 p, vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n  }\n\n  float sdSegment(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n  }\n\n  float sdCapsule(vec2 p, vec2 a, vec2 b, float r) {\n    return sdSegment(p, a, b) - r;\n  }\n\n  float opUnion(float d1, float d2) { return min(d1, d2); }\n  float opIntersection(float d1, float d2) { return max(d1, d2); }\n  float opSubtraction(float d1, float d2) { return max(d1, -d2); }\n\n  // --- State Sampling Helper ---\n  float getState(ivec2 cellCoord) {\n    ivec2 clampedCoord = clamp(cellCoord, ivec2(0), ivec2(u_textureResolution) - ivec2(1));\n    if (cellCoord != clampedCoord) return 0.0;\n    return texelFetch(u_stateTexture, clampedCoord, 0).r;\n  }\n\n  // --- Intended Connector Sampling ---\n  float getIntendedConnector(ivec2 cellCoord) {\n    ivec2 maxCoord = ivec2(u_textureResolution) - ivec2(1);\n    if (cellCoord.x < 0 || cellCoord.x >= maxCoord.x || \n        cellCoord.y < 0 || cellCoord.y >= maxCoord.y) {\n      return 0.0;\n    }\n    return texelFetch(u_intendedConnectorTexture, cellCoord, 0).r;\n  }\n\n  // --- Get Cell Center in World Space ---\n  vec2 getCellWorldCenter(ivec2 cell) {\n    float worldX = float(cell.x) * ${FIXED_SPACING} + u_centerOffset.x;\n    float worldY = float(cell.y) * ${FIXED_SPACING} + u_centerOffset.y;\n    return vec2(worldX, worldY);\n  }\n\n  void main() {\n    // Calculate fragment's world position\n    vec2 planeOrigin = -u_planeSize * 0.5; // Assuming plane is centered at (0,0)\n    vec2 fragWorldPos = planeOrigin + vUv * u_planeSize;\n    \n    // Determine which cell this fragment is in (find nearest cell)\n    vec2 gridCoord = (fragWorldPos - u_centerOffset) / ${FIXED_SPACING};\n    ivec2 cell_bl = ivec2(floor(gridCoord));\n    \n    // Define neighbor cells\n    ivec2 cell_br = cell_bl + ivec2(1, 0);\n    ivec2 cell_tl = cell_bl + ivec2(0, 1);\n    ivec2 cell_tr = cell_bl + ivec2(1, 1);\n\n    // Get states for all 4 cells around this fragment\n    float state_bl = getState(cell_bl);\n    float state_br = getState(cell_br);\n    float state_tl = getState(cell_tl);\n    float state_tr = getState(cell_tr);\n\n    // Get intended connector for this cell group\n    float intendedConnector = getIntendedConnector(cell_bl);\n\n    // Get cell centers in world space\n    vec2 center_bl = getCellWorldCenter(cell_bl);\n    vec2 center_br = getCellWorldCenter(cell_br);\n    vec2 center_tl = getCellWorldCenter(cell_tl);\n    vec2 center_tr = getCellWorldCenter(cell_tr);\n\n    // Calculate bounding box in world space\n    vec2 bboxCenter = (center_bl + center_br + center_tl + center_tr) * 0.25;\n    vec2 bboxHalfSize = vec2(${FIXED_SPACING} * 0.5);\n\n    // Calculate world-space radii\n    float worldRadiusA = u_radiusA * u_gridSpacing;\n    float worldRadiusB = u_radiusB * u_gridSpacing;\n\n    float finalSdf = 1e6;\n\n    // --- Diagonal \\\\ (TL to BR) Connector ---\n    if (state_tl == 1.0 && state_br == 1.0 && intendedConnector == 1.0) {\n      // Create connector path\n      float sdf_capsule_tl_br = sdCapsule(fragWorldPos, center_tl, center_br, worldRadiusB);\n      \n      // Must be outside the outer circles of TR and BL\n      float sdf_outside_tr_outer = sdCircle(fragWorldPos - center_tr, worldRadiusA);\n      float sdf_outside_bl_outer = sdCircle(fragWorldPos - center_bl, worldRadiusA);\n      \n      // Combine all constraints\n      float sdf_diag1 = sdf_capsule_tl_br;\n      sdf_diag1 = max(sdf_diag1, -sdf_outside_tr_outer);\n      sdf_diag1 = max(sdf_diag1, -sdf_outside_bl_outer);\n\n      finalSdf = min(finalSdf, sdf_diag1);\n    }\n\n    // --- Diagonal / (BL to TR) Connector ---\n    if (state_bl == 1.0 && state_tr == 1.0 && intendedConnector == 2.0) {\n      // Create connector path\n      float sdf_capsule_bl_tr = sdCapsule(fragWorldPos, center_bl, center_tr, worldRadiusB);\n      \n      // Must be outside the outer circles of TL and BR\n      float sdf_outside_tl_outer = sdCircle(fragWorldPos - center_tl, worldRadiusA);\n      float sdf_outside_br_outer = sdCircle(fragWorldPos - center_br, worldRadiusA);\n      \n      // Combine all constraints\n      float sdf_diag2 = sdf_capsule_bl_tr;\n      sdf_diag2 = max(sdf_diag2, -sdf_outside_tl_outer);\n      sdf_diag2 = max(sdf_diag2, -sdf_outside_br_outer);\n\n      finalSdf = min(finalSdf, sdf_diag2);\n    }\n\n    // --- Horizontal (BL to BR) Connector ---\n    if (state_bl == 1.0 && state_br == 1.0 && intendedConnector == 4.0) {\n      float sdf_h_bottom = sdCapsule(fragWorldPos, center_bl, center_br, worldRadiusB);\n      finalSdf = min(finalSdf, sdf_h_bottom);\n    }\n\n    // --- Horizontal (TL to TR) Connector ---\n    if (state_tl == 1.0 && state_tr == 1.0 && intendedConnector == 3.0) {\n      float sdf_h_top = sdCapsule(fragWorldPos, center_tl, center_tr, worldRadiusB);\n      finalSdf = min(finalSdf, sdf_h_top);\n    }\n\n    // --- Final Output with Anti-aliasing ---\n    if (finalSdf < 0.0) {\n      float smoothFactor = fwidth(finalSdf) * 0.8;\n      float alpha = smoothstep(smoothFactor, -smoothFactor, finalSdf);\n      \n      if (alpha > 0.01) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, alpha);\n      } else {\n        discard;\n      }\n    } else {\n      discard;\n    }\n  }\n`;\n// Create the shader material\nconst ConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_1__.shaderMaterial)({\n    u_stateTexture: null,\n    u_intendedConnectorTexture: null,\n    u_gridDimensions: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(10, 10),\n    u_textureResolution: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(10, 10),\n    u_radiusA: BASE_RADIUS_A,\n    u_radiusB: BASE_RADIUS_B,\n    u_gridSpacing: BASE_GRID_SPACING,\n    // World space uniforms\n    u_centerOffset: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0),\n    u_planeSize: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(10, 10)\n}, vertexShader, fragmentShader);\n// Extend R3F\n(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.extend)({\n    ConnectorMaterial\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ConnectorMaterial); // Define constants matching GridScene for defaults (optional, but helps IDE)\n // Moved to top - Removing these commented out versions\n // const BASE_GRID_SPACING = 1.0;\n // const BASE_RADIUS_A = 0.5;\n // const BASE_RADIUS_B = 0.4; \n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/ConnectorMaterial.tsx\n");

/***/ }),

/***/ "./components/GridScene.tsx":
/*!**********************************!*\
  !*** ./components/GridScene.tsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var leva__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! leva */ \"leva\");\n/* harmony import */ var leva__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(leva__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _CircleMaterial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CircleMaterial */ \"./components/CircleMaterial.tsx\");\n/* harmony import */ var _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ConnectorMaterial */ \"./components/ConnectorMaterial.tsx\");\n/* harmony import */ var _CmdHorizConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CmdHorizConnectorMaterial */ \"./components/CmdHorizConnectorMaterial.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_2__, _CircleMaterial__WEBPACK_IMPORTED_MODULE_4__, _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_5__, _CmdHorizConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__]);\n([three__WEBPACK_IMPORTED_MODULE_2__, _CircleMaterial__WEBPACK_IMPORTED_MODULE_4__, _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_5__, _CmdHorizConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n// === Feature 1: Grid Data & Configuration ===\n// Constants for base geometry\nconst BASE_GRID_SPACING = 1.0; // Keep for reference if needed, but spacing is now fixed\nconst BASE_RADIUS_A = 0.5; // Outer radius\nconst BASE_RADIUS_B = 0.4; // Inner radius\n// Calculate the fixed spacing based on desired overlap\nconst FIXED_SPACING = BASE_RADIUS_A + BASE_RADIUS_B; // 0.5 + 0.4 = 0.9\n// Helper Functions\nconst getIndex = (row, col, gridWidth)=>{\n    return row * gridWidth + col;\n};\nconst getCoords = (index, gridWidth)=>{\n    const row = Math.floor(index / gridWidth);\n    const col = index % gridWidth;\n    return {\n        row,\n        col\n    };\n};\n// Modified to use fixed spacing\nconst getCenterOffset = (gridWidth, gridHeight, spacing)=>{\n    const totalWidth = (gridWidth - 1) * spacing;\n    const totalHeight = (gridHeight - 1) * spacing;\n    return new three__WEBPACK_IMPORTED_MODULE_2__.Vector2(-totalWidth / 2, -totalHeight / 2);\n};\n// Modified to use fixed spacing\nconst getWorldPosition = (row, col, gridWidth, gridHeight, spacing, centerOffset)=>{\n    const x = col * spacing + centerOffset.x;\n    const y = row * spacing + centerOffset.y;\n    return {\n        x,\n        y\n    };\n};\n// Define connector types as constants\nconst CONNECTOR_NONE = 0;\nconst CONNECTOR_DIAG_TL_BR = 1; // Diagonal \\\nconst CONNECTOR_DIAG_BL_TR = 2; // Diagonal /\nconst CONNECTOR_HORIZ_T = 3; // Horizontal Top\nconst CONNECTOR_HORIZ_B = 4; // Horizontal Bottom\nconst CONNECTOR_HORIZ_CMD = 5; // New: Cmd-click horizontal connector\n// === GridScene Component ===\n// Dummy object for matrix calculations\nconst dummy = new three__WEBPACK_IMPORTED_MODULE_2__.Object3D();\nconst tempMatrix = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4();\nconst tempVec = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n// New: Helper for horizontal cmd-click connector key generation\nconst getHorizCmdConnectorKey = (x, y)=>`hcmd:${x},${y}`;\nconst GridScene = ()=>{\n    // Leva controls for grid parameters\n    const { GRID_WIDTH, GRID_HEIGHT, visualScale } = (0,leva__WEBPACK_IMPORTED_MODULE_3__.useControls)(\"Grid\", {\n        GRID_WIDTH: {\n            value: 10,\n            min: 2,\n            max: 100,\n            step: 1\n        },\n        GRID_HEIGHT: {\n            value: 10,\n            min: 2,\n            max: 100,\n            step: 1\n        },\n        visualScale: {\n            value: 1.0,\n            min: 0.1,\n            max: 5,\n            step: 0.1,\n            label: \"Visual Scale\" // Updated label\n        }\n    });\n    // Derived values calculation using useMemo for optimization\n    const { TOTAL_CIRCLES, centerOffset, planeWidth, planeHeight// Based on FIXED_SPACING\n     } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const total = GRID_WIDTH * GRID_HEIGHT;\n        // Offset and plane dimensions depend on the fixed spacing between centers\n        const offset = getCenterOffset(GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING);\n        // Calculate actual grid extent based on fixed spacing\n        const width = (GRID_WIDTH > 1 ? (GRID_WIDTH - 1) * FIXED_SPACING : 0) + visualScale * BASE_RADIUS_A * 2; // Add diameter margin\n        const height = (GRID_HEIGHT > 1 ? (GRID_HEIGHT - 1) * FIXED_SPACING : 0) + visualScale * BASE_RADIUS_A * 2; // Add diameter margin\n        console.log(`Layout Spacing: ${FIXED_SPACING.toFixed(2)}`);\n        console.log(`Calculated Center Offset: x=${offset.x.toFixed(2)}, y=${offset.y.toFixed(2)}`);\n        console.log(`Calculated Plane Size: w=${width.toFixed(2)}, h=${height.toFixed(2)}`);\n        return {\n            TOTAL_CIRCLES: total,\n            centerOffset: offset,\n            planeWidth: width,\n            planeHeight: height\n        };\n    }, [\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        visualScale\n    ]); // Depend on grid size and visual scale for plane margin\n    // Refs for mesh and material\n    const meshRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const materialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // Use 'any' or specific type for CircleMaterial\n    const activationAttributeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const connectorMaterialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // Ref for connector material\n    // === Feature 3: Circle Activation State ===\n    const [activationState, setActivationState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>new Float32Array(TOTAL_CIRCLES).fill(0.0) // 0.0 inactive, 1.0 active\n    );\n    // New: Add horizontal cmd-click connector state\n    const [cmdHorizConnectors, setCmdHorizConnectors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    // State needs to be reset if TOTAL_CIRCLES changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"Resetting activation state due to grid size change\");\n        setActivationState(new Float32Array(TOTAL_CIRCLES).fill(0.0));\n    }, [\n        TOTAL_CIRCLES\n    ]);\n    // Update buffer attribute when state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (activationAttributeRef.current) {\n            activationAttributeRef.current.array = activationState;\n            activationAttributeRef.current.needsUpdate = true;\n            console.log(\"Updated activation buffer attribute.\");\n        }\n    }, [\n        activationState\n    ]);\n    // === Feature 2: Static Circle Rendering ===\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!meshRef.current) return;\n        // Calculate and set instance matrices\n        for(let index = 0; index < TOTAL_CIRCLES; index++){\n            const { row, col } = getCoords(index, GRID_WIDTH);\n            const { x, y } = getWorldPosition(row, col, GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING, centerOffset);\n            dummy.position.set(x, y, 0); // Z=0 for circles\n            // Retrieve existing scale/rotation before setting position to avoid overwriting scale effect\n            const currentMatrix = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4();\n            meshRef.current.getMatrixAt(index, currentMatrix);\n            const position = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n            const quaternion = new three__WEBPACK_IMPORTED_MODULE_2__.Quaternion();\n            const scaleVec = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n            currentMatrix.decompose(position, quaternion, scaleVec);\n            // Update only position\n            position.set(x, y, 0);\n            dummy.matrix.compose(position, quaternion, scaleVec); // Recompose with original scale/rotation\n            meshRef.current.setMatrixAt(index, dummy.matrix);\n        }\n        meshRef.current.instanceMatrix.needsUpdate = true;\n    // console.log(`Updated ${TOTAL_CIRCLES} instance matrices (position).`);\n    }, [\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        FIXED_SPACING,\n        TOTAL_CIRCLES,\n        centerOffset\n    ]);\n    // Update shader uniforms when scaled radii change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (materialRef.current) {\n            // Shader expects radii relative to plane size (0.0 to 0.5 range if plane is size 1)\n            // Let's use plane size 1 and scale radii to 0.0-0.5 range for shader.\n            materialRef.current.uniforms.u_radiusA.value = BASE_RADIUS_A; // Use base radius relative to plane size 1\n            materialRef.current.uniforms.u_radiusB.value = BASE_RADIUS_B; // Use base radius relative to plane size 1\n            // Scale the whole instance instead to match spacing\n            console.log(`Updated material radii uniforms: A=${BASE_RADIUS_A}, B=${BASE_RADIUS_B}`);\n        }\n    }, []); // Depend on scaled radii, though using base for uniform now\n    // Adjust instance scale based on spacing\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!meshRef.current) return;\n        const scale = visualScale; // Use the leva control value for scale\n        console.log(`Updating instance scales to: ${scale.toFixed(2)}`);\n        for(let index = 0; index < TOTAL_CIRCLES; index++){\n            meshRef.current.getMatrixAt(index, tempMatrix);\n            const position = tempVec.setFromMatrixPosition(tempMatrix);\n            const quaternion = new three__WEBPACK_IMPORTED_MODULE_2__.Quaternion().setFromRotationMatrix(tempMatrix);\n            // Update only scale\n            const scaleVec = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().set(scale, scale, 1);\n            tempMatrix.compose(position, quaternion, scaleVec);\n            meshRef.current.setMatrixAt(index, tempMatrix);\n        }\n        meshRef.current.instanceMatrix.needsUpdate = true;\n    }, [\n        visualScale,\n        TOTAL_CIRCLES\n    ]); // Depends on scale control and count\n    // === Feature 4: Circle Interaction ===\n    const handleCircleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event)=>{\n        event.stopPropagation();\n        if (event.instanceId === undefined || !meshRef.current) return;\n        const index = event.instanceId;\n        const { row: y, col: x } = getCoords(index, GRID_WIDTH);\n        console.log(\"Circle clicked:\", {\n            index,\n            x,\n            y,\n            isCmdClick: event.metaKey || event.ctrlKey,\n            point: event.point,\n            currentState: activationState[index]\n        });\n        // Get the center of the clicked instance\n        meshRef.current.getMatrixAt(index, tempMatrix);\n        const instanceCenter = tempVec.setFromMatrixPosition(tempMatrix);\n        // Calculate distance from click point to instance center\n        const distFromCenter = event.point.distanceTo(instanceCenter);\n        // Get the CURRENT world-space inner radius\n        const currentInnerRadius = BASE_RADIUS_B * visualScale;\n        console.log(\"Click details:\", {\n            distFromCenter,\n            currentInnerRadius,\n            isInside: distFromCenter <= currentInnerRadius\n        });\n        // Check if click is inside the inner circle\n        if (distFromCenter <= currentInnerRadius) {\n            // Check if this is a cmd/ctrl click\n            if (event.metaKey || event.ctrlKey) {\n                // Check conditions for horizontal connector\n                const rightIndex = getIndex(y, x + 1, GRID_WIDTH);\n                const canConnect = x < GRID_WIDTH - 1 && activationState[index] === 1.0 && activationState[rightIndex] === 1.0;\n                console.log(\"Processing cmd-click on circle:\", {\n                    x,\n                    y,\n                    rightIndex,\n                    leftActive: activationState[index] === 1.0,\n                    rightActive: x < GRID_WIDTH - 1 ? activationState[rightIndex] === 1.0 : false,\n                    canConnect\n                });\n                if (canConnect) {\n                    const connectorKey = getHorizCmdConnectorKey(x, y);\n                    console.log(\"Toggling horizontal connector:\", {\n                        key: connectorKey,\n                        currentValue: cmdHorizConnectors[connectorKey] || 0\n                    });\n                    // Toggle the horizontal connector\n                    setCmdHorizConnectors((prev)=>{\n                        const newValue = prev[connectorKey] ? 0 : 1;\n                        const newState = {\n                            ...prev,\n                            [connectorKey]: newValue\n                        };\n                        console.log(\"Updated connector state:\", {\n                            key: connectorKey,\n                            newValue,\n                            allConnectors: newState\n                        });\n                        return newState;\n                    });\n                    return;\n                }\n            }\n            // Regular click behavior (toggle activation)\n            console.log(\"Toggling circle activation\");\n            setActivationState((current)=>{\n                const newState = new Float32Array(current);\n                newState[index] = newState[index] === 1.0 ? 0.0 : 1.0;\n                console.log(\"New activation state for circle:\", {\n                    index,\n                    oldValue: current[index],\n                    newValue: newState[index]\n                });\n                return newState;\n            });\n        }\n    }, [\n        meshRef,\n        setActivationState,\n        GRID_WIDTH,\n        visualScale,\n        setCmdHorizConnectors,\n        cmdHorizConnectors\n    ]);\n    // === Feature 5: State Data Texture ===\n    const stateTexture = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        console.log(`Creating state texture: ${GRID_WIDTH}x${GRID_HEIGHT}`);\n        const texture = new three__WEBPACK_IMPORTED_MODULE_2__.DataTexture(new Float32Array(TOTAL_CIRCLES).fill(0.0), GRID_WIDTH, GRID_HEIGHT, three__WEBPACK_IMPORTED_MODULE_2__.RedFormat, three__WEBPACK_IMPORTED_MODULE_2__.FloatType);\n        texture.minFilter = three__WEBPACK_IMPORTED_MODULE_2__.NearestFilter; // Crucial: No interpolation\n        texture.magFilter = three__WEBPACK_IMPORTED_MODULE_2__.NearestFilter;\n        texture.needsUpdate = true; // Initial update needed\n        return texture;\n    }, [\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        TOTAL_CIRCLES\n    ]); // Recreate texture if grid dimensions change\n    // Update texture data when activationState changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (stateTexture && activationState.length === stateTexture.image.data.length) {\n            stateTexture.image.data.set(activationState); // Update texture data directly\n            stateTexture.needsUpdate = true; // Mark for GPU upload\n            console.log(\"Updated state texture data.\");\n        } else {\n            console.warn(\"Skipping texture update: Mismatch between state array and texture size or texture not ready.\");\n        }\n    }, [\n        activationState,\n        stateTexture\n    ]); // Depend on activation state and the texture itself\n    // === Feature 8: Connector Interaction ===\n    // Connector intent state - track which connector types are intended for 2x2 cell groups\n    const [intendedConnectors, setIntendedConnectors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    // Helper to get the key for a 2x2 cell group\n    const getCellGroupKey = (cellX, cellY)=>`${cellX},${cellY}`;\n    // Helper to get the intended connector for a 2x2 cell group\n    const getIntendedConnector = (cellX, cellY)=>{\n        const key = getCellGroupKey(cellX, cellY);\n        return intendedConnectors[key] || CONNECTOR_NONE;\n    };\n    // Handle clicks on the connector plane\n    const handleConnectorClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event)=>{\n        event.stopPropagation();\n        console.log(\"Connector plane clicked:\", {\n            point: event.point,\n            isCmdClick: event.metaKey || event.ctrlKey\n        });\n        // Get the click point in world space\n        const clickPoint = event.point;\n        // First, check if the click is on a circle\n        // Determine which grid cell this point is closest to\n        const gridX = Math.round((clickPoint.x - centerOffset.x) / FIXED_SPACING);\n        const gridY = Math.round((clickPoint.y - centerOffset.y) / FIXED_SPACING);\n        // Check if this cell is within grid bounds\n        if (gridX >= 0 && gridX < GRID_WIDTH && gridY >= 0 && gridY < GRID_HEIGHT) {\n            // Calculate the cell center in world space\n            const cellCenter = getWorldPosition(gridY, gridX, GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING, centerOffset);\n            // Calculate distance from click to cell center\n            const distFromCenter = Math.sqrt(Math.pow(clickPoint.x - cellCenter.x, 2) + Math.pow(clickPoint.y - cellCenter.y, 2));\n            // Check if click is inside the inner circle\n            const currentInnerRadius = BASE_RADIUS_B * visualScale;\n            if (distFromCenter <= currentInnerRadius) {\n                // This is a click on a circle - toggle its activation state\n                const index = getIndex(gridY, gridX, GRID_WIDTH);\n                // If this is a cmd/ctrl click and there's an active circle to the right\n                if ((event.metaKey || event.ctrlKey) && gridX < GRID_WIDTH - 1) {\n                    const rightIndex = getIndex(gridY, gridX + 1, GRID_WIDTH);\n                    const leftActive = activationState[index] === 1.0;\n                    const rightActive = activationState[rightIndex] === 1.0;\n                    console.log(\"Processing cmd-click:\", {\n                        x: gridX,\n                        y: gridY,\n                        leftActive,\n                        rightActive\n                    });\n                    // If both circles are active, toggle the connector\n                    if (leftActive && rightActive) {\n                        const connectorKey = getHorizCmdConnectorKey(gridX, gridY);\n                        setCmdHorizConnectors((prev)=>{\n                            const newConnectors = {\n                                ...prev\n                            };\n                            newConnectors[connectorKey] = prev[connectorKey] ? 0 : 1;\n                            console.log(\"Toggling cmd-horiz connector:\", {\n                                key: connectorKey,\n                                newValue: newConnectors[connectorKey]\n                            });\n                            return newConnectors;\n                        });\n                        return;\n                    }\n                }\n                // Regular click behavior (toggle activation)\n                setActivationState((current)=>{\n                    const newState = new Float32Array(current);\n                    newState[index] = newState[index] === 1.0 ? 0.0 : 1.0;\n                    return newState;\n                });\n                console.log(`Toggling circle at (${gridX},${gridY})`);\n                return;\n            }\n        }\n        // If we get here, the click wasn't on a circle, so treat it as a connector click\n        // Determine which grid cell (bottom-left of a 2x2 group) this point is closest to\n        const groupX = Math.floor((clickPoint.x - centerOffset.x) / FIXED_SPACING);\n        const groupY = Math.floor((clickPoint.y - centerOffset.y) / FIXED_SPACING);\n        // Get the indices of the four cells in the 2x2 group\n        const blIndex = getIndex(groupY, groupX, GRID_WIDTH);\n        const brIndex = getIndex(groupY, groupX + 1, GRID_WIDTH);\n        const tlIndex = getIndex(groupY + 1, groupX, GRID_WIDTH);\n        const trIndex = getIndex(groupY + 1, groupX + 1, GRID_WIDTH);\n        // Check which cells are within grid bounds\n        const isValidGroup = groupX >= 0 && groupX < GRID_WIDTH - 1 && groupY >= 0 && groupY < GRID_HEIGHT - 1;\n        if (!isValidGroup) return;\n        // Get activation states for the four cells\n        const blActive = activationState[blIndex] === 1.0;\n        const brActive = activationState[brIndex] === 1.0;\n        const tlActive = activationState[tlIndex] === 1.0;\n        const trActive = activationState[trIndex] === 1.0;\n        // Get the world positions of the cell centers\n        const blPos = getWorldPosition(groupY, groupX, GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING, centerOffset);\n        const brPos = getWorldPosition(groupY, groupX + 1, GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING, centerOffset);\n        const tlPos = getWorldPosition(groupY + 1, groupX, GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING, centerOffset);\n        const trPos = getWorldPosition(groupY + 1, groupX + 1, GRID_WIDTH, GRID_HEIGHT, FIXED_SPACING, centerOffset);\n        // Calculate the center of the 2x2 group\n        const centerX = (blPos.x + brPos.x + tlPos.x + trPos.x) / 4;\n        const centerY = (blPos.y + brPos.y + tlPos.y + trPos.y) / 4;\n        // Calculate distance from click to center of 2x2 group\n        const distToCenter = Math.sqrt(Math.pow(clickPoint.x - centerX, 2) + Math.pow(clickPoint.y - centerY, 2));\n        // Check if the click is in the center zone (30% of cell spacing)\n        const isCenterClick = distToCenter < FIXED_SPACING * 0.3 * visualScale;\n        // Get the possible diagonal connectors\n        const canUseDiagTLBR = tlActive && brActive;\n        const canUseDiagBLTR = blActive && trActive;\n        const hasDiagonalOptions = canUseDiagTLBR || canUseDiagBLTR;\n        // Get current intended connector\n        const currentConnector = getIntendedConnector(groupX, groupY);\n        const groupKey = getCellGroupKey(groupX, groupY);\n        let newConnector = CONNECTOR_NONE;\n        // If clicked in the center and diagonal connectors are available, cycle through them\n        if (isCenterClick && hasDiagonalOptions) {\n            if (canUseDiagTLBR && canUseDiagBLTR) {\n                // Both diagonals are available, cycle through the options: NONE -> TL-BR -> BL-TR -> NONE\n                if (currentConnector === CONNECTOR_NONE) {\n                    newConnector = CONNECTOR_DIAG_TL_BR;\n                } else if (currentConnector === CONNECTOR_DIAG_TL_BR) {\n                    newConnector = CONNECTOR_DIAG_BL_TR;\n                } else {\n                    newConnector = CONNECTOR_NONE;\n                }\n            } else if (canUseDiagTLBR) {\n                // Only TL-BR diagonal is available, toggle it\n                newConnector = currentConnector === CONNECTOR_DIAG_TL_BR ? CONNECTOR_NONE : CONNECTOR_DIAG_TL_BR;\n            } else if (canUseDiagBLTR) {\n                // Only BL-TR diagonal is available, toggle it\n                newConnector = currentConnector === CONNECTOR_DIAG_BL_TR ? CONNECTOR_NONE : CONNECTOR_DIAG_BL_TR;\n            }\n        } else {\n            // For clicks outside the center, use the original logic\n            // Determine which connector was clicked\n            let clickedType = CONNECTOR_NONE;\n            // Calculate distances from click to each diagonal\n            const distToBLTR = Math.abs((clickPoint.x - blPos.x) * (trPos.y - blPos.y) - (clickPoint.y - blPos.y) * (trPos.x - blPos.x)) / Math.sqrt(Math.pow(trPos.x - blPos.x, 2) + Math.pow(trPos.y - blPos.y, 2));\n            const distToTLBR = Math.abs((clickPoint.x - tlPos.x) * (brPos.y - tlPos.y) - (clickPoint.y - tlPos.y) * (brPos.x - tlPos.x)) / Math.sqrt(Math.pow(brPos.x - tlPos.x, 2) + Math.pow(brPos.y - tlPos.y, 2));\n            // Determine if click is closer to horizontal or vertical\n            const clickOffsetX = clickPoint.x - centerX;\n            const clickOffsetY = clickPoint.y - centerY;\n            const isHorizontalClick = Math.abs(clickOffsetY) < Math.abs(clickOffsetX);\n            const isTopHalf = clickOffsetY > 0;\n            if (distToBLTR < distToTLBR) {\n                // Closer to BL-TR diagonal (/)\n                if (blActive && trActive) {\n                    clickedType = CONNECTOR_DIAG_BL_TR;\n                }\n            } else {\n                // Closer to TL-BR diagonal (\\)\n                if (tlActive && brActive) {\n                    clickedType = CONNECTOR_DIAG_TL_BR;\n                }\n            }\n            // Horizontal connector logic\n            if (isHorizontalClick) {\n                if (isTopHalf) {\n                    // Top horizontal\n                    if (tlActive && trActive) {\n                        clickedType = CONNECTOR_HORIZ_T;\n                    }\n                } else {\n                    // Bottom horizontal\n                    if (blActive && brActive) {\n                        clickedType = CONNECTOR_HORIZ_B;\n                    }\n                }\n            }\n            // Toggle logic - if the clicked connector is already active, turn it off\n            // Otherwise, turn off any current connector and turn on the clicked one\n            if (currentConnector === clickedType) {\n                newConnector = CONNECTOR_NONE; // Toggle off\n            } else if (clickedType !== CONNECTOR_NONE) {\n                newConnector = clickedType; // Toggle on new connector\n            }\n        }\n        // Update the intended connector\n        setIntendedConnectors((prev)=>({\n                ...prev,\n                [groupKey]: newConnector\n            }));\n        console.log(`Clicked cell group (${groupX},${groupY}), setting connector to ${newConnector}`);\n    }, [\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        FIXED_SPACING,\n        centerOffset,\n        activationState,\n        intendedConnectors,\n        visualScale\n    ]);\n    // Reset connector intent when a circle is deactivated\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check all cell groups\n        const newIntendedConnectors = {\n            ...intendedConnectors\n        };\n        const newCmdHorizConnectors = {\n            ...cmdHorizConnectors\n        };\n        let hasChanges = false;\n        let hasCmdHorizChanges = false;\n        // First check regular connectors\n        for(const key in intendedConnectors){\n            const connector = intendedConnectors[key];\n            if (connector === CONNECTOR_NONE) continue;\n            // Parse x,y from key\n            const [x, y] = key.split(\",\").map(Number);\n            // Get the indices of the four cells\n            const blIndex = getIndex(y, x, GRID_WIDTH);\n            const brIndex = getIndex(y, x + 1, GRID_WIDTH);\n            const tlIndex = getIndex(y + 1, x, GRID_WIDTH);\n            const trIndex = getIndex(y + 1, x + 1, GRID_WIDTH);\n            // Get activation states\n            const blActive = activationState[blIndex] === 1.0;\n            const brActive = activationState[brIndex] === 1.0;\n            const tlActive = activationState[tlIndex] === 1.0;\n            const trActive = activationState[trIndex] === 1.0;\n            // Check if the connector is still valid\n            let isValid = true;\n            switch(connector){\n                case CONNECTOR_DIAG_TL_BR:\n                    isValid = tlActive && brActive;\n                    break;\n                case CONNECTOR_DIAG_BL_TR:\n                    isValid = blActive && trActive;\n                    break;\n                case CONNECTOR_HORIZ_T:\n                    isValid = tlActive && trActive;\n                    break;\n                case CONNECTOR_HORIZ_B:\n                    isValid = blActive && brActive;\n                    break;\n            }\n            if (!isValid) {\n                newIntendedConnectors[key] = CONNECTOR_NONE;\n                hasChanges = true;\n            }\n        }\n        // Now check cmd-click horizontal connectors\n        for(const key in cmdHorizConnectors){\n            if (cmdHorizConnectors[key] === 0) continue;\n            // Parse x,y from key (remove 'hcmd:' prefix)\n            const [x, y] = key.substring(5).split(\",\").map(Number);\n            // Get indices for left and right circles\n            const leftIndex = getIndex(y, x, GRID_WIDTH);\n            const rightIndex = getIndex(y, x + 1, GRID_WIDTH);\n            // Check if both circles are still active\n            const leftActive = activationState[leftIndex] === 1.0;\n            const rightActive = activationState[rightIndex] === 1.0;\n            if (!leftActive || !rightActive) {\n                newCmdHorizConnectors[key] = 0;\n                hasCmdHorizChanges = true;\n            }\n        }\n        if (hasChanges) {\n            setIntendedConnectors(newIntendedConnectors);\n        }\n        if (hasCmdHorizChanges) {\n            setCmdHorizConnectors(newCmdHorizConnectors);\n        }\n    }, [\n        activationState,\n        GRID_WIDTH,\n        intendedConnectors,\n        cmdHorizConnectors\n    ]);\n    // Create a data texture for intended connectors\n    const intendedConnectorTexture = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        console.log(`Creating intended connector texture: ${GRID_WIDTH - 1}x${GRID_HEIGHT - 1}`);\n        // Texture has one pixel per 2x2 cell group (grid cells minus 1 in each dimension)\n        const width = Math.max(1, GRID_WIDTH - 1);\n        const height = Math.max(1, GRID_HEIGHT - 1);\n        const texture = new three__WEBPACK_IMPORTED_MODULE_2__.DataTexture(new Float32Array(width * height).fill(0.0), width, height, three__WEBPACK_IMPORTED_MODULE_2__.RedFormat, three__WEBPACK_IMPORTED_MODULE_2__.FloatType);\n        texture.minFilter = three__WEBPACK_IMPORTED_MODULE_2__.NearestFilter;\n        texture.magFilter = three__WEBPACK_IMPORTED_MODULE_2__.NearestFilter;\n        texture.needsUpdate = true;\n        return texture;\n    }, [\n        GRID_WIDTH,\n        GRID_HEIGHT\n    ]);\n    // Update the intended connector texture when state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const width = Math.max(1, GRID_WIDTH - 1);\n        const data = new Float32Array(width * Math.max(1, GRID_HEIGHT - 1));\n        for(let y = 0; y < GRID_HEIGHT - 1; y++){\n            for(let x = 0; x < GRID_WIDTH - 1; x++){\n                const index = y * width + x;\n                const connector = getIntendedConnector(x, y);\n                data[index] = connector;\n            }\n        }\n        if (intendedConnectorTexture && data.length === intendedConnectorTexture.image.data.length) {\n            intendedConnectorTexture.image.data.set(data);\n            intendedConnectorTexture.needsUpdate = true;\n        }\n    }, [\n        intendedConnectors,\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        intendedConnectorTexture\n    ]);\n    // Create horizontal cmd-click connector texture\n    const cmdHorizConnectorTexture = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        console.log(`Creating cmd-click horizontal connector texture: ${GRID_WIDTH - 1}x${GRID_HEIGHT}`);\n        // Texture has one pixel per horizontal connection possibility\n        const width = Math.max(1, GRID_WIDTH - 1);\n        const height = GRID_HEIGHT;\n        const texture = new three__WEBPACK_IMPORTED_MODULE_2__.DataTexture(new Float32Array(width * height).fill(0.0), width, height, three__WEBPACK_IMPORTED_MODULE_2__.RedFormat, three__WEBPACK_IMPORTED_MODULE_2__.FloatType);\n        texture.minFilter = three__WEBPACK_IMPORTED_MODULE_2__.NearestFilter;\n        texture.magFilter = three__WEBPACK_IMPORTED_MODULE_2__.NearestFilter;\n        texture.needsUpdate = true;\n        return texture;\n    }, [\n        GRID_WIDTH,\n        GRID_HEIGHT\n    ]);\n    // Update the cmd-click horizontal connector texture when state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const width = Math.max(1, GRID_WIDTH - 1);\n        const data = new Float32Array(width * GRID_HEIGHT);\n        console.log(\"Updating cmd-horiz connector texture:\", {\n            width,\n            height: GRID_HEIGHT,\n            connectors: cmdHorizConnectors\n        });\n        for(let y = 0; y < GRID_HEIGHT; y++){\n            for(let x = 0; x < width; x++){\n                const key = getHorizCmdConnectorKey(x, y);\n                const value = cmdHorizConnectors[key] || 0;\n                data[y * width + x] = value;\n                if (value > 0) {\n                    console.log(\"Found active connector:\", {\n                        x,\n                        y,\n                        key,\n                        value\n                    });\n                }\n            }\n        }\n        if (cmdHorizConnectorTexture && data.length === cmdHorizConnectorTexture.image.data.length) {\n            cmdHorizConnectorTexture.image.data.set(data);\n            cmdHorizConnectorTexture.needsUpdate = true;\n            console.log(\"Updated cmd-horiz connector texture data\");\n        } else {\n            console.warn(\"Skipping cmd-horiz texture update: size mismatch or texture not ready\", {\n                textureSize: cmdHorizConnectorTexture?.image.data.length,\n                dataSize: data.length\n            });\n        }\n    }, [\n        cmdHorizConnectors,\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        cmdHorizConnectorTexture\n    ]);\n    // Ref for the new material\n    const cmdHorizMaterialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"instancedMesh\", {\n                ref: meshRef,\n                args: [\n                    undefined,\n                    undefined,\n                    TOTAL_CIRCLES\n                ],\n                onClick: handleCircleClick,\n                position: [\n                    0,\n                    0,\n                    -0.1\n                ],\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            1,\n                            1\n                        ],\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"instancedBufferAttribute\", {\n                            ref: activationAttributeRef,\n                            attach: \"attributes-a_activated\",\n                            args: [\n                                activationState,\n                                1\n                            ],\n                            usage: three__WEBPACK_IMPORTED_MODULE_2__.DynamicDrawUsage\n                        }, void 0, false, {\n                            fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                            lineNumber: 737,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                        lineNumber: 735,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circleMaterial\", {\n                        ref: materialRef,\n                        transparent: true\n                    }, _CircleMaterial__WEBPACK_IMPORTED_MODULE_4__[\"default\"].key, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                        lineNumber: 744,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, `circles-${TOTAL_CIRCLES}`, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                lineNumber: 727,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n                position: [\n                    0,\n                    0,\n                    0.1\n                ],\n                onClick: handleConnectorClick,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            planeWidth,\n                            planeHeight\n                        ]\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                        lineNumber: 757,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"connectorMaterial\", {\n                        ref: connectorMaterialRef,\n                        transparent: true,\n                        side: three__WEBPACK_IMPORTED_MODULE_2__.DoubleSide,\n                        // Pass required uniforms (cmdHoriz texture removed)\n                        u_stateTexture: stateTexture,\n                        u_intendedConnectorTexture: intendedConnectorTexture,\n                        // u_cmdHorizConnectorTexture removed\n                        u_gridDimensions: [\n                            GRID_WIDTH,\n                            GRID_HEIGHT\n                        ],\n                        u_textureResolution: [\n                            GRID_WIDTH,\n                            GRID_HEIGHT\n                        ],\n                        u_radiusA: BASE_RADIUS_A,\n                        u_radiusB: BASE_RADIUS_B,\n                        u_gridSpacing: visualScale,\n                        u_centerOffset: [\n                            centerOffset.x,\n                            centerOffset.y\n                        ],\n                        u_planeSize: [\n                            planeWidth,\n                            planeHeight\n                        ]\n                    }, _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_5__[\"default\"].key, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                        lineNumber: 758,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, `connector-plane-${GRID_WIDTH}-${GRID_HEIGHT}-${visualScale}`, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                lineNumber: 752,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n                position: [\n                    0,\n                    0,\n                    0.2\n                ],\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            planeWidth,\n                            planeHeight\n                        ]\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                        lineNumber: 784,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"cmdHorizConnectorMaterial\", {\n                        ref: cmdHorizMaterialRef,\n                        transparent: true,\n                        side: three__WEBPACK_IMPORTED_MODULE_2__.DoubleSide,\n                        // Pass necessary uniforms for this specific material\n                        u_stateTexture: stateTexture,\n                        u_cmdHorizConnectorTexture: cmdHorizConnectorTexture,\n                        u_gridDimensions: [\n                            GRID_WIDTH,\n                            GRID_HEIGHT\n                        ],\n                        u_textureResolution: [\n                            GRID_WIDTH,\n                            GRID_HEIGHT\n                        ],\n                        u_radiusA: BASE_RADIUS_A,\n                        u_radiusB: BASE_RADIUS_B,\n                        u_gridSpacing: visualScale,\n                        u_centerOffset: [\n                            centerOffset.x,\n                            centerOffset.y\n                        ],\n                        u_planeSize: [\n                            planeWidth,\n                            planeHeight\n                        ]\n                    }, _CmdHorizConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__[\"default\"].key, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                        lineNumber: 785,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, `cmd-horiz-connector-plane-${GRID_WIDTH}-${GRID_HEIGHT}-${visualScale}`, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n                lineNumber: 778,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/GridScene.tsx\",\n        lineNumber: 726,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GridScene);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/GridScene.tsx\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"@react-three/fiber\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var leva__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! leva */ \"leva\");\n/* harmony import */ var leva__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(leva__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_GridScene__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/GridScene */ \"./components/GridScene.tsx\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/Home.module.css */ \"./styles/Home.module.css\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_GridScene__WEBPACK_IMPORTED_MODULE_5__]);\n_components_GridScene__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n // Adjust path if necessary\n // Assuming you have this for styling\nconst App = ()=>{\n    // Leva controls for camera zoom\n    const { cameraZoom } = (0,leva__WEBPACK_IMPORTED_MODULE_4__.useControls)({\n        cameraZoom: {\n            value: 50,\n            min: 10,\n            max: 200,\n            step: 1\n        }\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(leva__WEBPACK_IMPORTED_MODULE_4__.Leva, {\n                collapsed: true\n            }, void 0, false, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/pages/index.js\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined),\n            \" \",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.Canvas, {\n                style: {\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_drei__WEBPACK_IMPORTED_MODULE_3__.OrthographicCamera, {\n                        makeDefault: true,\n                        zoom: cameraZoom,\n                        position: [\n                            0,\n                            0,\n                            100\n                        ],\n                        near: 0.1,\n                        far: 1000\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/pages/index.js\",\n                        lineNumber: 21,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ambientLight\", {\n                        intensity: 1.0\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/pages/index.js\",\n                        lineNumber: 28,\n                        columnNumber: 9\n                    }, undefined),\n                    \" \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_GridScene__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/pages/index.js\",\n                        lineNumber: 31,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/pages/index.js\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/ian/cursor_projects/webGL_meta/pages/index.js\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDa0I7QUFDVztBQUNkO0FBQ08sQ0FBQywyQkFBMkI7QUFDN0IsQ0FBQyxxQ0FBcUM7QUFFckYsTUFBTU8sTUFBTTtJQUNWLGdDQUFnQztJQUNoQyxNQUFNLEVBQUVDLFVBQVUsRUFBRSxHQUFHSixpREFBV0EsQ0FBQztRQUNqQ0ksWUFBWTtZQUFFQyxPQUFPO1lBQUlDLEtBQUs7WUFBSUMsS0FBSztZQUFLQyxNQUFNO1FBQUU7SUFDdEQ7SUFFQSxxQkFDRSw4REFBQ0M7UUFBSUMsV0FBV1IsMEVBQWdCOzswQkFDOUIsOERBQUNILHNDQUFJQTtnQkFBQ2EsU0FBUzs7Ozs7O1lBQUc7MEJBQ2xCLDhEQUFDZixzREFBTUE7Z0JBQ0xnQixPQUFPO29CQUFFQyxVQUFVO29CQUFZQyxLQUFLO29CQUFHQyxNQUFNO29CQUFHQyxPQUFPO29CQUFRQyxRQUFRO2dCQUFPOztrQ0FHOUUsOERBQUNwQixpRUFBa0JBO3dCQUNqQnFCLFdBQVc7d0JBQ1hDLE1BQU1oQjt3QkFDTlUsVUFBVTs0QkFBQzs0QkFBRzs0QkFBRzt5QkFBSTt3QkFDckJPLE1BQU07d0JBQ05DLEtBQUs7Ozs7OztrQ0FFUCw4REFBQ0M7d0JBQWFDLFdBQVc7Ozs7OztvQkFBTztrQ0FHaEMsOERBQUN2Qiw2REFBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT2xCO0FBRUEsaUVBQWVFLEdBQUdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbC1kb3QtZ3JpZC1tdnAvLi9wYWdlcy9pbmRleC5qcz9iZWU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDYW52YXMgfSBmcm9tICdAcmVhY3QtdGhyZWUvZmliZXInO1xuaW1wb3J0IHsgT3J0aG9ncmFwaGljQ2FtZXJhIH0gZnJvbSAnQHJlYWN0LXRocmVlL2RyZWknO1xuaW1wb3J0IHsgTGV2YSwgdXNlQ29udHJvbHMgfSBmcm9tICdsZXZhJztcbmltcG9ydCBHcmlkU2NlbmUgZnJvbSAnLi4vY29tcG9uZW50cy9HcmlkU2NlbmUnOyAvLyBBZGp1c3QgcGF0aCBpZiBuZWNlc3NhcnlcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vc3R5bGVzL0hvbWUubW9kdWxlLmNzcyc7IC8vIEFzc3VtaW5nIHlvdSBoYXZlIHRoaXMgZm9yIHN0eWxpbmdcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuICAvLyBMZXZhIGNvbnRyb2xzIGZvciBjYW1lcmEgem9vbVxuICBjb25zdCB7IGNhbWVyYVpvb20gfSA9IHVzZUNvbnRyb2xzKHtcbiAgICBjYW1lcmFab29tOiB7IHZhbHVlOiA1MCwgbWluOiAxMCwgbWF4OiAyMDAsIHN0ZXA6IDEgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICA8TGV2YSBjb2xsYXBzZWQgLz4gey8qIExldmEgcGFuZWwgZm9yIGNvbnRyb2xzICovfVxuICAgICAgPENhbnZhc1xuICAgICAgICBzdHlsZT17eyBwb3NpdGlvbjogJ2Fic29sdXRlJywgdG9wOiAwLCBsZWZ0OiAwLCB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICcxMDAlJyB9fVxuICAgICAgPlxuICAgICAgICB7LyogVXNlIE9ydGhvZ3JhcGhpY0NhbWVyYSBmb3IgMkQgdmlldyAqL31cbiAgICAgICAgPE9ydGhvZ3JhcGhpY0NhbWVyYVxuICAgICAgICAgIG1ha2VEZWZhdWx0IC8vIFNldHMgdGhpcyBjYW1lcmEgYXMgdGhlIGRlZmF1bHRcbiAgICAgICAgICB6b29tPXtjYW1lcmFab29tfVxuICAgICAgICAgIHBvc2l0aW9uPXtbMCwgMCwgMTAwXX0gLy8gUG9zaXRpb25lZCB0byBsb29rIGFsb25nIC1aIGF4aXNcbiAgICAgICAgICBuZWFyPXswLjF9XG4gICAgICAgICAgZmFyPXsxMDAwfVxuICAgICAgICAvPlxuICAgICAgICA8YW1iaWVudExpZ2h0IGludGVuc2l0eT17MS4wfSAvPiB7LyogQmFzaWMgbGlnaHRpbmcgKi99XG4gICAgICAgIFxuICAgICAgICB7LyogUmVuZGVyIHRoZSBtYWluIHNjZW5lIGNvbXBvbmVudCAqL31cbiAgICAgICAgPEdyaWRTY2VuZSAvPiBcbiAgICAgICAgXG4gICAgICAgIHsvKiBPcHRpb25hbDogQWRkIE9yYml0Q29udHJvbHMgaWYgbmVlZGVkIGZvciBkZWJ1Z2dpbmcvbmF2aWdhdGlvbiAqL31cbiAgICAgICAgey8qIDxPcmJpdENvbnRyb2xzIGVuYWJsZVJvdGF0ZT17ZmFsc2V9IC8+ICovfVxuICAgICAgPC9DYW52YXM+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkNhbnZhcyIsIk9ydGhvZ3JhcGhpY0NhbWVyYSIsIkxldmEiLCJ1c2VDb250cm9scyIsIkdyaWRTY2VuZSIsInN0eWxlcyIsIkFwcCIsImNhbWVyYVpvb20iLCJ2YWx1ZSIsIm1pbiIsIm1heCIsInN0ZXAiLCJkaXYiLCJjbGFzc05hbWUiLCJjb250YWluZXIiLCJjb2xsYXBzZWQiLCJzdHlsZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsIndpZHRoIiwiaGVpZ2h0IiwibWFrZURlZmF1bHQiLCJ6b29tIiwibmVhciIsImZhciIsImFtYmllbnRMaWdodCIsImludGVuc2l0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "@react-three/drei":
/*!************************************!*\
  !*** external "@react-three/drei" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@react-three/drei");

/***/ }),

/***/ "@react-three/fiber":
/*!*************************************!*\
  !*** external "@react-three/fiber" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@react-three/fiber");

/***/ }),

/***/ "leva":
/*!***********************!*\
  !*** external "leva" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("leva");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "three":
/*!************************!*\
  !*** external "three" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = import("three");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();