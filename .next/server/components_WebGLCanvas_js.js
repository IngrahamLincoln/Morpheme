"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_WebGLCanvas_js";
exports.ids = ["components_WebGLCanvas_js"];
exports.modules = {

/***/ "./components/ConnectorMaterial.js":
/*!*****************************************!*\
  !*** ./components/ConnectorMaterial.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectorMaterial: () => (/* binding */ ConnectorMaterial)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Define uniforms and shader code\n// Adapted for InstancedMesh with matrix-based positioning\nconst ConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_1__.shaderMaterial)(// Uniforms (global settings)\n{\n    u_radiusB: 0.4,\n    u_radiusA: 0.5,\n    u_spacing: 1.5,\n    u_resolution: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(1, 1)\n}, // Vertex Shader - Pass instance visibility and world center\n/*glsl*/ `\n    // Instance attributes\n    attribute float a_instanceShowInner;\n    attribute float a_instanceShowOuter;\n\n    // Varyings to pass data to fragment shader\n    varying vec2 vUv;\n    varying vec2 vWorldPos;\n    varying vec2 vInstanceCenterWorld; // Pass instance center in world space\n    varying float v_showInner;\n    varying float v_showOuter;\n\n    void main() {\n      vUv = uv;\n      v_showInner = a_instanceShowInner;\n      v_showOuter = a_instanceShowOuter;\n\n      // World position of the vertex\n      vec4 worldPos = instanceMatrix * vec4(position, 1.0);\n      vWorldPos = worldPos.xy;\n      \n      // World position of the instance center (origin of the instance's local space)\n      vec4 instanceCenterWorld = instanceMatrix * vec4(0.0, 0.0, 0.0, 1.0);\n      vInstanceCenterWorld = instanceCenterWorld.xy;\n      \n      gl_Position = projectionMatrix * modelViewMatrix * worldPos;\n    }\n  `, // Fragment Shader - Use instance visibility and world center\n/*glsl*/ `\n    varying vec2 vUv;\n    varying vec2 vWorldPos;\n    varying vec2 vInstanceCenterWorld;\n    varying float v_showInner;\n    varying float v_showOuter;\n\n    uniform float u_radiusB; // Inner circle radius\n    uniform float u_radiusA; // Outer circle radius\n    uniform float u_spacing;\n    uniform vec2 u_resolution;\n\n    void main() {\n      // Calculate distance from pixel's world position to the instance's world center\n      float dist = length(vWorldPos - vInstanceCenterWorld);\n      \n      // Signed distance field for inner circle (radiusB)\n      float innerCircleSDF = dist - u_radiusB;\n      \n      // Signed distance field for outer circle (radiusA)\n      float outerCircleSDF = dist - u_radiusA;\n      \n      // Edge width for anti-aliasing\n      float edgeWidth = 0.01;\n      \n      // Line width for outlines\n      float lineWidth = 0.01;\n      \n      // Inner circle - use v_showInner (attribute)\n      float innerAlpha = 0.0;\n      bool isInnerVisible = v_showInner > 0.5;\n      if (isInnerVisible) {\n        // Full circle\n        innerAlpha = 1.0 - smoothstep(-edgeWidth, edgeWidth, innerCircleSDF);\n      } else {\n        // Just an outline\n        innerAlpha = (1.0 - smoothstep(-lineWidth/2.0, lineWidth/2.0, abs(innerCircleSDF) - lineWidth/2.0)) * 0.8;\n      }\n      \n      // Outer circle - use v_showOuter (attribute)\n      float ringAlpha = 0.0;\n      bool isOuterVisible = v_showOuter > 0.5;\n      // Always render outer circle as outline only, never filled\n      ringAlpha = (1.0 - smoothstep(-lineWidth/2.0, lineWidth/2.0, abs(outerCircleSDF) - lineWidth/2.0)) * 0.8;\n      \n      // Combine both shapes\n      float finalAlpha = max(innerAlpha, ringAlpha * 0.7);\n      \n      // If nearly transparent, discard the pixel\n      if (finalAlpha < 0.01) discard;\n      \n      // Create different colors based on instance visibility\n      vec3 innerColor = isInnerVisible ? vec3(0.0) : vec3(0.3); // Black when on, gray when outline\n      vec3 ringColor = vec3(0.5);  // Always light gray for outer circle outline\n      \n      // Determine final color\n      vec3 color = vec3(1.0); // Default white (shouldn't be visible)\n      if(abs(innerCircleSDF) < lineWidth / 2.0 + edgeWidth && !isInnerVisible) {\n        color = innerColor; // Inner outline\n      } else if (abs(outerCircleSDF) < lineWidth / 2.0 + edgeWidth) {\n         color = ringColor; // Outer outline - always render as outline\n      } else if (innerCircleSDF < 0.0 && isInnerVisible) {\n        color = innerColor; // Inner fill\n      } \n      // Removed the else if for outer circle fill since we never want it filled\n\n      // Output with calculated alpha\n      gl_FragColor = vec4(color, finalAlpha);\n    }\n  `);\n// Add a unique key for HMR purposes with R3F\nConnectorMaterial.key = three__WEBPACK_IMPORTED_MODULE_0__.MathUtils.generateUUID();\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Nvbm5lY3Rvck1hdGVyaWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0I7QUFDb0I7QUFFbkQsa0NBQWtDO0FBQ2xDLDBEQUEwRDtBQUUxRCxNQUFNRSxvQkFBb0JELGlFQUFjQSxDQUN0Qyw2QkFBNkI7QUFDN0I7SUFDRUUsV0FBVztJQUNYQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsY0FBYyxJQUFJTiwwQ0FBYSxDQUFDLEdBQUc7QUFDckMsR0FDQSw0REFBNEQ7QUFDNUQsTUFBTSxHQUFFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTJCVCxDQUFDLEVBQ0QsNkRBQTZEO0FBQzdELE1BQU0sR0FBRSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFxRVQsQ0FBQztBQUdILDZDQUE2QztBQUM3Q0Usa0JBQWtCTSxHQUFHLEdBQUdSLDRDQUFlLENBQUNVLFlBQVk7QUFFdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbC1kb3QtZ3JpZC1tdnAvLi9jb21wb25lbnRzL0Nvbm5lY3Rvck1hdGVyaWFsLmpzPzQxNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgc2hhZGVyTWF0ZXJpYWwgfSBmcm9tICdAcmVhY3QtdGhyZWUvZHJlaSc7XG5cbi8vIERlZmluZSB1bmlmb3JtcyBhbmQgc2hhZGVyIGNvZGVcbi8vIEFkYXB0ZWQgZm9yIEluc3RhbmNlZE1lc2ggd2l0aCBtYXRyaXgtYmFzZWQgcG9zaXRpb25pbmdcblxuY29uc3QgQ29ubmVjdG9yTWF0ZXJpYWwgPSBzaGFkZXJNYXRlcmlhbChcbiAgLy8gVW5pZm9ybXMgKGdsb2JhbCBzZXR0aW5ncylcbiAge1xuICAgIHVfcmFkaXVzQjogMC40LCAvLyBJbm5lciBjaXJjbGUgcmFkaXVzXG4gICAgdV9yYWRpdXNBOiAwLjUsIC8vIE91dGVyIGNpcmNsZSByYWRpdXNcbiAgICB1X3NwYWNpbmc6IDEuNSxcbiAgICB1X3Jlc29sdXRpb246IG5ldyBUSFJFRS5WZWN0b3IyKDEsIDEpLFxuICB9LFxuICAvLyBWZXJ0ZXggU2hhZGVyIC0gUGFzcyBpbnN0YW5jZSB2aXNpYmlsaXR5IGFuZCB3b3JsZCBjZW50ZXJcbiAgLypnbHNsKi9gXG4gICAgLy8gSW5zdGFuY2UgYXR0cmlidXRlc1xuICAgIGF0dHJpYnV0ZSBmbG9hdCBhX2luc3RhbmNlU2hvd0lubmVyO1xuICAgIGF0dHJpYnV0ZSBmbG9hdCBhX2luc3RhbmNlU2hvd091dGVyO1xuXG4gICAgLy8gVmFyeWluZ3MgdG8gcGFzcyBkYXRhIHRvIGZyYWdtZW50IHNoYWRlclxuICAgIHZhcnlpbmcgdmVjMiB2VXY7XG4gICAgdmFyeWluZyB2ZWMyIHZXb3JsZFBvcztcbiAgICB2YXJ5aW5nIHZlYzIgdkluc3RhbmNlQ2VudGVyV29ybGQ7IC8vIFBhc3MgaW5zdGFuY2UgY2VudGVyIGluIHdvcmxkIHNwYWNlXG4gICAgdmFyeWluZyBmbG9hdCB2X3Nob3dJbm5lcjtcbiAgICB2YXJ5aW5nIGZsb2F0IHZfc2hvd091dGVyO1xuXG4gICAgdm9pZCBtYWluKCkge1xuICAgICAgdlV2ID0gdXY7XG4gICAgICB2X3Nob3dJbm5lciA9IGFfaW5zdGFuY2VTaG93SW5uZXI7XG4gICAgICB2X3Nob3dPdXRlciA9IGFfaW5zdGFuY2VTaG93T3V0ZXI7XG5cbiAgICAgIC8vIFdvcmxkIHBvc2l0aW9uIG9mIHRoZSB2ZXJ0ZXhcbiAgICAgIHZlYzQgd29ybGRQb3MgPSBpbnN0YW5jZU1hdHJpeCAqIHZlYzQocG9zaXRpb24sIDEuMCk7XG4gICAgICB2V29ybGRQb3MgPSB3b3JsZFBvcy54eTtcbiAgICAgIFxuICAgICAgLy8gV29ybGQgcG9zaXRpb24gb2YgdGhlIGluc3RhbmNlIGNlbnRlciAob3JpZ2luIG9mIHRoZSBpbnN0YW5jZSdzIGxvY2FsIHNwYWNlKVxuICAgICAgdmVjNCBpbnN0YW5jZUNlbnRlcldvcmxkID0gaW5zdGFuY2VNYXRyaXggKiB2ZWM0KDAuMCwgMC4wLCAwLjAsIDEuMCk7XG4gICAgICB2SW5zdGFuY2VDZW50ZXJXb3JsZCA9IGluc3RhbmNlQ2VudGVyV29ybGQueHk7XG4gICAgICBcbiAgICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld01hdHJpeCAqIHdvcmxkUG9zO1xuICAgIH1cbiAgYCxcbiAgLy8gRnJhZ21lbnQgU2hhZGVyIC0gVXNlIGluc3RhbmNlIHZpc2liaWxpdHkgYW5kIHdvcmxkIGNlbnRlclxuICAvKmdsc2wqL2BcbiAgICB2YXJ5aW5nIHZlYzIgdlV2O1xuICAgIHZhcnlpbmcgdmVjMiB2V29ybGRQb3M7XG4gICAgdmFyeWluZyB2ZWMyIHZJbnN0YW5jZUNlbnRlcldvcmxkO1xuICAgIHZhcnlpbmcgZmxvYXQgdl9zaG93SW5uZXI7XG4gICAgdmFyeWluZyBmbG9hdCB2X3Nob3dPdXRlcjtcblxuICAgIHVuaWZvcm0gZmxvYXQgdV9yYWRpdXNCOyAvLyBJbm5lciBjaXJjbGUgcmFkaXVzXG4gICAgdW5pZm9ybSBmbG9hdCB1X3JhZGl1c0E7IC8vIE91dGVyIGNpcmNsZSByYWRpdXNcbiAgICB1bmlmb3JtIGZsb2F0IHVfc3BhY2luZztcbiAgICB1bmlmb3JtIHZlYzIgdV9yZXNvbHV0aW9uO1xuXG4gICAgdm9pZCBtYWluKCkge1xuICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlIGZyb20gcGl4ZWwncyB3b3JsZCBwb3NpdGlvbiB0byB0aGUgaW5zdGFuY2UncyB3b3JsZCBjZW50ZXJcbiAgICAgIGZsb2F0IGRpc3QgPSBsZW5ndGgodldvcmxkUG9zIC0gdkluc3RhbmNlQ2VudGVyV29ybGQpO1xuICAgICAgXG4gICAgICAvLyBTaWduZWQgZGlzdGFuY2UgZmllbGQgZm9yIGlubmVyIGNpcmNsZSAocmFkaXVzQilcbiAgICAgIGZsb2F0IGlubmVyQ2lyY2xlU0RGID0gZGlzdCAtIHVfcmFkaXVzQjtcbiAgICAgIFxuICAgICAgLy8gU2lnbmVkIGRpc3RhbmNlIGZpZWxkIGZvciBvdXRlciBjaXJjbGUgKHJhZGl1c0EpXG4gICAgICBmbG9hdCBvdXRlckNpcmNsZVNERiA9IGRpc3QgLSB1X3JhZGl1c0E7XG4gICAgICBcbiAgICAgIC8vIEVkZ2Ugd2lkdGggZm9yIGFudGktYWxpYXNpbmdcbiAgICAgIGZsb2F0IGVkZ2VXaWR0aCA9IDAuMDE7XG4gICAgICBcbiAgICAgIC8vIExpbmUgd2lkdGggZm9yIG91dGxpbmVzXG4gICAgICBmbG9hdCBsaW5lV2lkdGggPSAwLjAxO1xuICAgICAgXG4gICAgICAvLyBJbm5lciBjaXJjbGUgLSB1c2Ugdl9zaG93SW5uZXIgKGF0dHJpYnV0ZSlcbiAgICAgIGZsb2F0IGlubmVyQWxwaGEgPSAwLjA7XG4gICAgICBib29sIGlzSW5uZXJWaXNpYmxlID0gdl9zaG93SW5uZXIgPiAwLjU7XG4gICAgICBpZiAoaXNJbm5lclZpc2libGUpIHtcbiAgICAgICAgLy8gRnVsbCBjaXJjbGVcbiAgICAgICAgaW5uZXJBbHBoYSA9IDEuMCAtIHNtb290aHN0ZXAoLWVkZ2VXaWR0aCwgZWRnZVdpZHRoLCBpbm5lckNpcmNsZVNERik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBKdXN0IGFuIG91dGxpbmVcbiAgICAgICAgaW5uZXJBbHBoYSA9ICgxLjAgLSBzbW9vdGhzdGVwKC1saW5lV2lkdGgvMi4wLCBsaW5lV2lkdGgvMi4wLCBhYnMoaW5uZXJDaXJjbGVTREYpIC0gbGluZVdpZHRoLzIuMCkpICogMC44O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBPdXRlciBjaXJjbGUgLSB1c2Ugdl9zaG93T3V0ZXIgKGF0dHJpYnV0ZSlcbiAgICAgIGZsb2F0IHJpbmdBbHBoYSA9IDAuMDtcbiAgICAgIGJvb2wgaXNPdXRlclZpc2libGUgPSB2X3Nob3dPdXRlciA+IDAuNTtcbiAgICAgIC8vIEFsd2F5cyByZW5kZXIgb3V0ZXIgY2lyY2xlIGFzIG91dGxpbmUgb25seSwgbmV2ZXIgZmlsbGVkXG4gICAgICByaW5nQWxwaGEgPSAoMS4wIC0gc21vb3Roc3RlcCgtbGluZVdpZHRoLzIuMCwgbGluZVdpZHRoLzIuMCwgYWJzKG91dGVyQ2lyY2xlU0RGKSAtIGxpbmVXaWR0aC8yLjApKSAqIDAuODtcbiAgICAgIFxuICAgICAgLy8gQ29tYmluZSBib3RoIHNoYXBlc1xuICAgICAgZmxvYXQgZmluYWxBbHBoYSA9IG1heChpbm5lckFscGhhLCByaW5nQWxwaGEgKiAwLjcpO1xuICAgICAgXG4gICAgICAvLyBJZiBuZWFybHkgdHJhbnNwYXJlbnQsIGRpc2NhcmQgdGhlIHBpeGVsXG4gICAgICBpZiAoZmluYWxBbHBoYSA8IDAuMDEpIGRpc2NhcmQ7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBkaWZmZXJlbnQgY29sb3JzIGJhc2VkIG9uIGluc3RhbmNlIHZpc2liaWxpdHlcbiAgICAgIHZlYzMgaW5uZXJDb2xvciA9IGlzSW5uZXJWaXNpYmxlID8gdmVjMygwLjApIDogdmVjMygwLjMpOyAvLyBCbGFjayB3aGVuIG9uLCBncmF5IHdoZW4gb3V0bGluZVxuICAgICAgdmVjMyByaW5nQ29sb3IgPSB2ZWMzKDAuNSk7ICAvLyBBbHdheXMgbGlnaHQgZ3JheSBmb3Igb3V0ZXIgY2lyY2xlIG91dGxpbmVcbiAgICAgIFxuICAgICAgLy8gRGV0ZXJtaW5lIGZpbmFsIGNvbG9yXG4gICAgICB2ZWMzIGNvbG9yID0gdmVjMygxLjApOyAvLyBEZWZhdWx0IHdoaXRlIChzaG91bGRuJ3QgYmUgdmlzaWJsZSlcbiAgICAgIGlmKGFicyhpbm5lckNpcmNsZVNERikgPCBsaW5lV2lkdGggLyAyLjAgKyBlZGdlV2lkdGggJiYgIWlzSW5uZXJWaXNpYmxlKSB7XG4gICAgICAgIGNvbG9yID0gaW5uZXJDb2xvcjsgLy8gSW5uZXIgb3V0bGluZVxuICAgICAgfSBlbHNlIGlmIChhYnMob3V0ZXJDaXJjbGVTREYpIDwgbGluZVdpZHRoIC8gMi4wICsgZWRnZVdpZHRoKSB7XG4gICAgICAgICBjb2xvciA9IHJpbmdDb2xvcjsgLy8gT3V0ZXIgb3V0bGluZSAtIGFsd2F5cyByZW5kZXIgYXMgb3V0bGluZVxuICAgICAgfSBlbHNlIGlmIChpbm5lckNpcmNsZVNERiA8IDAuMCAmJiBpc0lubmVyVmlzaWJsZSkge1xuICAgICAgICBjb2xvciA9IGlubmVyQ29sb3I7IC8vIElubmVyIGZpbGxcbiAgICAgIH0gXG4gICAgICAvLyBSZW1vdmVkIHRoZSBlbHNlIGlmIGZvciBvdXRlciBjaXJjbGUgZmlsbCBzaW5jZSB3ZSBuZXZlciB3YW50IGl0IGZpbGxlZFxuXG4gICAgICAvLyBPdXRwdXQgd2l0aCBjYWxjdWxhdGVkIGFscGhhXG4gICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCBmaW5hbEFscGhhKTtcbiAgICB9XG4gIGBcbik7XG5cbi8vIEFkZCBhIHVuaXF1ZSBrZXkgZm9yIEhNUiBwdXJwb3NlcyB3aXRoIFIzRlxuQ29ubmVjdG9yTWF0ZXJpYWwua2V5ID0gVEhSRUUuTWF0aFV0aWxzLmdlbmVyYXRlVVVJRCgpO1xuXG5leHBvcnQgeyBDb25uZWN0b3JNYXRlcmlhbCB9OyAiXSwibmFtZXMiOlsiVEhSRUUiLCJzaGFkZXJNYXRlcmlhbCIsIkNvbm5lY3Rvck1hdGVyaWFsIiwidV9yYWRpdXNCIiwidV9yYWRpdXNBIiwidV9zcGFjaW5nIiwidV9yZXNvbHV0aW9uIiwiVmVjdG9yMiIsImtleSIsIk1hdGhVdGlscyIsImdlbmVyYXRlVVVJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/ConnectorMaterial.js\n");

/***/ }),

/***/ "./components/GridConnectorMaterial.js":
/*!*********************************************!*\
  !*** ./components/GridConnectorMaterial.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GridConnectorMaterial: () => (/* binding */ GridConnectorMaterial)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// This material handles the connector shapes between active points on the grid\nconst GridConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_1__.shaderMaterial)(// Uniforms\n{\n    u_radiusB: 0.4,\n    u_radiusA: 0.5,\n    u_spacing: 1.0,\n    u_thickness: 0.2,\n    u_curvature: 0.5,\n    u_resolution: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(1, 1),\n    u_activeConnector: 0,\n    u_gridState: new three__WEBPACK_IMPORTED_MODULE_0__.DataTexture(new Float32Array(4), 2, 2, three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat, three__WEBPACK_IMPORTED_MODULE_0__.FloatType)\n}, // Vertex Shader\n/*glsl*/ `\n    varying vec2 vUv;\n    varying vec2 vWorldPos;\n\n    void main() {\n      vUv = uv;\n      \n      // World position of the vertex\n      vec4 worldPos = modelMatrix * vec4(position, 1.0);\n      vWorldPos = worldPos.xy;\n      \n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `, // Fragment Shader\n/*glsl*/ `\n    varying vec2 vUv;\n    varying vec2 vWorldPos;\n\n    uniform float u_radiusB; // Inner circle radius (black circle)\n    uniform float u_radiusA; // Outer circle radius (for connector shape)\n    uniform float u_spacing;\n    uniform float u_thickness; // Controls connector thickness\n    uniform float u_curvature; // Controls the curve shape\n    uniform vec2 u_resolution;\n    uniform float u_activeConnector; // 0 = none, 1 = red (AB), 2 = blue (CD)\n    uniform sampler2D u_gridState;\n\n    // Helper function to get circle state from the grid state texture\n    vec4 getGridState(int row, int col) {\n      return texture2D(u_gridState, vec2(float(col) + 0.5, float(row) + 0.5) / 2.0);\n    }\n\n    // Helper function to calculate distance to a circle\n    float distToCircle(vec2 point, vec2 center) {\n      return length(point - center);\n    }\n\n    // Create a smooth minimum function to blend the connector\n    float smin(float a, float b, float k) {\n      float h = max(k - abs(a - b), 0.0) / k;\n      return min(a, b) - h * h * k * 0.25;\n    }\n\n    void main() {\n      // If no connector is active, discard immediately\n      if (u_activeConnector < 0.5) {\n        discard;\n        return;\n      }\n      \n      // Calculate grid positions (2x2 grid)\n      float gridOffset = u_spacing * 0.5;\n      vec2 center_A = vec2(-gridOffset, gridOffset);   // Top-left (A)\n      vec2 center_B = vec2(gridOffset, -gridOffset);   // Bottom-right (B)\n      vec2 center_C = vec2(-gridOffset, -gridOffset);  // Bottom-left (C)\n      vec2 center_D = vec2(gridOffset, gridOffset);    // Top-right (D)\n\n      // Calculate distances from current pixel to each circle center\n      float dist_A = distToCircle(vWorldPos, center_A);\n      float dist_B = distToCircle(vWorldPos, center_B);\n      float dist_C = distToCircle(vWorldPos, center_C);\n      float dist_D = distToCircle(vWorldPos, center_D);\n\n      // Get circle states\n      vec4 stateA = getGridState(0, 0); // Top-left\n      vec4 stateB = getGridState(1, 1); // Bottom-right\n      vec4 stateC = getGridState(1, 0); // Bottom-left\n      vec4 stateD = getGridState(0, 1); // Top-right\n\n      // Check if relevant circles are active \n      bool circleAInnerActive = stateA.r > 0.5; // Top-left inner circle\n      bool circleBInnerActive = stateB.r > 0.5; // Bottom-right inner circle\n      bool circleCInnerActive = stateC.r > 0.5; // Bottom-left inner circle\n      bool circleDInnerActive = stateD.r > 0.5; // Top-right inner circle\n      \n      // Determine which connector to draw based on active connector state\n      bool drawABConnector = u_activeConnector == 1.0;\n      bool drawCDConnector = u_activeConnector == 2.0;\n      \n      // Verify the required circles are active for the selected connector\n      if (drawABConnector && (!circleAInnerActive || !circleBInnerActive)) {\n        discard;\n        return;\n      }\n      \n      if (drawCDConnector && (!circleCInnerActive || !circleDInnerActive)) {\n        discard;\n        return;\n      }\n      \n      // Distance fields for the inner black circles\n      float sdfA = dist_A - u_radiusB;\n      float sdfB = dist_B - u_radiusB;\n      float sdfC = dist_C - u_radiusB;\n      float sdfD = dist_D - u_radiusB;\n      \n      // We only continue if we're outside the relevant black circles\n      bool outsideRelevantCircles = true;\n      \n      if (drawABConnector) {\n        outsideRelevantCircles = (sdfA > 0.0) && (sdfB > 0.0);\n      }\n      \n      if (drawCDConnector) {\n        outsideRelevantCircles = (sdfC > 0.0) && (sdfD > 0.0);\n      }\n      \n      if (!outsideRelevantCircles) {\n        discard;\n        return;\n      }\n      \n      // Check if inside influence areas\n      bool insideInfluenceArea = false;\n      \n      if (drawABConnector) {\n        // For Red AB connector:\n        // Must be outside inner B circles (we already checked this with outsideRelevantCircles)\n        // Must be outside outer A circles (represented by the gray circles)\n        // Notice how we're checking if we're outside both outer A circles (C and D)\n        insideInfluenceArea = (dist_C > u_radiusA) && (dist_D > u_radiusA);\n      }\n      \n      if (drawCDConnector) {\n        // For Blue CD connector:\n        // Must be outside inner A circles (we already checked this with outsideRelevantCircles)\n        // Must be outside outer B circles (represented by the gray circles)\n        // Notice how we're checking if we're outside both outer B circles (A and B)\n        insideInfluenceArea = (dist_A > u_radiusA) && (dist_B > u_radiusA);\n      }\n      \n      if (!insideInfluenceArea) {\n        discard;\n        return;\n      }\n      \n      // Calculate vector between the active circles\n      vec2 activeDirection;\n      vec2 startCenter;\n      vec2 endCenter;\n      float distStart;\n      float distEnd;\n      \n      if (drawABConnector) {\n        activeDirection = center_B - center_A;\n        startCenter = center_A;\n        endCenter = center_B;\n        distStart = dist_A;\n        distEnd = dist_B;\n      }\n      \n      if (drawCDConnector) {\n        activeDirection = center_D - center_C;\n        startCenter = center_C;\n        endCenter = center_D;\n        distStart = dist_C;\n        distEnd = dist_D;\n      }\n      \n      // Continue with existing connector logic, but use the active centers\n      float lengthAB = length(activeDirection);\n      vec2 AB_normalized = activeDirection / lengthAB;\n      \n      // Project current point onto line\n      vec2 AP = vWorldPos - startCenter;\n      float projection = dot(AP, AB_normalized);\n      \n      // Create a field that represents the \"pathway\" between the two circles\n      // This creates a curved shape that narrows in the middle\n      float pathwayField;\n      \n      // For the first part of the curvature range, use distance-based shape\n      if (u_curvature < 0.5) {\n        // Method 1: Path with varying width based on projection along AB\n        \n        // Only proceed if the pixel is reasonably near the AB line\n        if (projection >= -u_radiusA && projection <= lengthAB + u_radiusA) {\n          // Calculate perpendicular distance from point to AB line\n          vec2 perpendicular = AP - projection * AB_normalized;\n          float perpDistance = length(perpendicular);\n          \n          // Base width based on thickness\n          float baseWidth = u_thickness * u_radiusA;\n          float midPoint = lengthAB * 0.5;\n          float distFromMid = abs(projection - midPoint);\n          \n          // Make narrower in middle based on curvature\n          float t = distFromMid / midPoint; // 0 at center, 1 at endpoints\n          float narrowingFactor = mix(0.5, 0.9, u_curvature * 2.0); // More narrow at higher curvature\n          float widthCurve = 1.0 - pow(t, 1.5) * narrowingFactor;\n          \n          // Calculate the adjusted width based on position\n          float adjustedWidth;\n          \n          if (projection < 0.0) {\n            // Near endpoint A - blend with circle\n            adjustedWidth = mix(u_radiusA * 0.8, baseWidth, 1.0 + projection / u_radiusA);\n          } else if (projection > lengthAB) {\n            // Near endpoint B - blend with circle\n            adjustedWidth = mix(u_radiusA * 0.8, baseWidth, 1.0 - (projection - lengthAB) / u_radiusA);\n          } else {\n            // Between endpoints - use curved width\n            adjustedWidth = baseWidth * widthCurve;\n          }\n          \n          // If within the adjusted width, we're in the connector\n          if (perpDistance < adjustedWidth) {\n            // Set color based on which connector is being drawn\n            if (drawABConnector) {\n              gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // Red for AB connector\n            } else {\n              gl_FragColor = vec4(0.0, 0.5, 1.0, 1.0); // Blue for CD connector\n            }\n            return;\n          }\n        }\n      }\n      else {\n        // Method 2: Use hyperbolic distance field for higher curvature\n        // Normalize distances for better control\n        float d1 = max(0.0, distStart - u_radiusB) / u_radiusA; \n        float d2 = max(0.0, distEnd - u_radiusB) / u_radiusA;\n        \n        // Create hyperbolic field (product of distances)\n        pathwayField = d1 * d2;\n        \n        // Adjust field strength based on distance to make shape more compact\n        float distanceScale = 3.0 / lengthAB;\n        pathwayField *= distanceScale;\n        \n        // Thickness controls the threshold\n        float threshold = u_thickness * 0.2 * mix(1.0, 2.0, u_curvature - 0.5);\n        \n        // Check if within the field threshold\n        if (pathwayField < threshold) {\n          // Only show connector between the circles (not extending out the other sides)\n          float dotProductA = dot(AP, AB_normalized);\n          float dotProductB = dot(vWorldPos - endCenter, -AB_normalized);\n          \n          if (dotProductA >= -u_radiusB * 0.5 && dotProductB >= -u_radiusB * 0.5) {\n            // Set color based on which connector is being drawn\n            if (drawABConnector) {\n              gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // Red for AB connector\n            } else {\n              gl_FragColor = vec4(0.0, 0.5, 1.0, 1.0); // Blue for CD connector\n            }\n            return;\n          }\n        }\n      }\n      \n      // If we got here, the pixel is outside the connector shape\n      discard;\n    }\n  `);\n// Add a unique key for HMR purposes with R3F\nGridConnectorMaterial.key = three__WEBPACK_IMPORTED_MODULE_0__.MathUtils.generateUUID();\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0dyaWRDb25uZWN0b3JNYXRlcmlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQStCO0FBQ29CO0FBRW5ELCtFQUErRTtBQUMvRSxNQUFNRSx3QkFBd0JELGlFQUFjQSxDQUMxQyxXQUFXO0FBQ1g7SUFDRUUsV0FBVztJQUNYQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsYUFBYTtJQUNiQyxhQUFhO0lBQ2JDLGNBQWMsSUFBSVIsMENBQWEsQ0FBQyxHQUFHO0lBQ25DVSxtQkFBbUI7SUFDbkJDLGFBQWEsSUFBSVgsOENBQWlCLENBQ2hDLElBQUlhLGFBQWEsSUFDakIsR0FDQSxHQUNBYiw2Q0FBZ0IsRUFDaEJBLDRDQUFlO0FBRW5CLEdBQ0EsZ0JBQWdCO0FBQ2hCLE1BQU0sR0FBRSxDQUFDOzs7Ozs7Ozs7Ozs7O0VBYVQsQ0FBQyxFQUNELGtCQUFrQjtBQUNsQixNQUFNLEdBQUUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBZ1BULENBQUM7QUFHSCw2Q0FBNkM7QUFDN0NFLHNCQUFzQmMsR0FBRyxHQUFHaEIsNENBQWUsQ0FBQ2tCLFlBQVk7QUFFdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbC1kb3QtZ3JpZC1tdnAvLi9jb21wb25lbnRzL0dyaWRDb25uZWN0b3JNYXRlcmlhbC5qcz9iMjFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7IHNoYWRlck1hdGVyaWFsIH0gZnJvbSAnQHJlYWN0LXRocmVlL2RyZWknO1xuXG4vLyBUaGlzIG1hdGVyaWFsIGhhbmRsZXMgdGhlIGNvbm5lY3RvciBzaGFwZXMgYmV0d2VlbiBhY3RpdmUgcG9pbnRzIG9uIHRoZSBncmlkXG5jb25zdCBHcmlkQ29ubmVjdG9yTWF0ZXJpYWwgPSBzaGFkZXJNYXRlcmlhbChcbiAgLy8gVW5pZm9ybXNcbiAge1xuICAgIHVfcmFkaXVzQjogMC40LCAvLyBJbm5lciBjaXJjbGUgcmFkaXVzIChibGFjayBjaXJjbGUpXG4gICAgdV9yYWRpdXNBOiAwLjUsIC8vIE91dGVyIGNpcmNsZSByYWRpdXMgKGZvciBjb25uZWN0b3Igc2hhcGUgY2FsY3VsYXRpb24pXG4gICAgdV9zcGFjaW5nOiAxLjAsIC8vIEdyaWQgc3BhY2luZ1xuICAgIHVfdGhpY2tuZXNzOiAwLjIsIC8vIENvbm5lY3RvciB0aGlja25lc3MgY29udHJvbFxuICAgIHVfY3VydmF0dXJlOiAwLjUsIC8vIENvbnRyb2xzIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvbm5lY3RvclxuICAgIHVfcmVzb2x1dGlvbjogbmV3IFRIUkVFLlZlY3RvcjIoMSwgMSksXG4gICAgdV9hY3RpdmVDb25uZWN0b3I6IDAsIC8vIDAgPSBub25lLCAxID0gcmVkIChBQiksIDIgPSBibHVlIChDRClcbiAgICB1X2dyaWRTdGF0ZTogbmV3IFRIUkVFLkRhdGFUZXh0dXJlKCAvLyBXaWxsIHN0b3JlIGdyaWQgc3RhdGUgaW4gYSB0ZXh0dXJlXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KDQpLCAvLyBSR0JBIHZhbHVlcyBwZXIgY2VsbFxuICAgICAgMiwgLy8gd2lkdGggKGZvciAyeDIgZ3JpZClcbiAgICAgIDIsIC8vIGhlaWdodCAoZm9yIDJ4MiBncmlkKVxuICAgICAgVEhSRUUuUkdCQUZvcm1hdCxcbiAgICAgIFRIUkVFLkZsb2F0VHlwZVxuICAgICksXG4gIH0sXG4gIC8vIFZlcnRleCBTaGFkZXJcbiAgLypnbHNsKi9gXG4gICAgdmFyeWluZyB2ZWMyIHZVdjtcbiAgICB2YXJ5aW5nIHZlYzIgdldvcmxkUG9zO1xuXG4gICAgdm9pZCBtYWluKCkge1xuICAgICAgdlV2ID0gdXY7XG4gICAgICBcbiAgICAgIC8vIFdvcmxkIHBvc2l0aW9uIG9mIHRoZSB2ZXJ0ZXhcbiAgICAgIHZlYzQgd29ybGRQb3MgPSBtb2RlbE1hdHJpeCAqIHZlYzQocG9zaXRpb24sIDEuMCk7XG4gICAgICB2V29ybGRQb3MgPSB3b3JsZFBvcy54eTtcbiAgICAgIFxuICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcbiAgICB9XG4gIGAsXG4gIC8vIEZyYWdtZW50IFNoYWRlclxuICAvKmdsc2wqL2BcbiAgICB2YXJ5aW5nIHZlYzIgdlV2O1xuICAgIHZhcnlpbmcgdmVjMiB2V29ybGRQb3M7XG5cbiAgICB1bmlmb3JtIGZsb2F0IHVfcmFkaXVzQjsgLy8gSW5uZXIgY2lyY2xlIHJhZGl1cyAoYmxhY2sgY2lyY2xlKVxuICAgIHVuaWZvcm0gZmxvYXQgdV9yYWRpdXNBOyAvLyBPdXRlciBjaXJjbGUgcmFkaXVzIChmb3IgY29ubmVjdG9yIHNoYXBlKVxuICAgIHVuaWZvcm0gZmxvYXQgdV9zcGFjaW5nO1xuICAgIHVuaWZvcm0gZmxvYXQgdV90aGlja25lc3M7IC8vIENvbnRyb2xzIGNvbm5lY3RvciB0aGlja25lc3NcbiAgICB1bmlmb3JtIGZsb2F0IHVfY3VydmF0dXJlOyAvLyBDb250cm9scyB0aGUgY3VydmUgc2hhcGVcbiAgICB1bmlmb3JtIHZlYzIgdV9yZXNvbHV0aW9uO1xuICAgIHVuaWZvcm0gZmxvYXQgdV9hY3RpdmVDb25uZWN0b3I7IC8vIDAgPSBub25lLCAxID0gcmVkIChBQiksIDIgPSBibHVlIChDRClcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1X2dyaWRTdGF0ZTtcblxuICAgIC8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgY2lyY2xlIHN0YXRlIGZyb20gdGhlIGdyaWQgc3RhdGUgdGV4dHVyZVxuICAgIHZlYzQgZ2V0R3JpZFN0YXRlKGludCByb3csIGludCBjb2wpIHtcbiAgICAgIHJldHVybiB0ZXh0dXJlMkQodV9ncmlkU3RhdGUsIHZlYzIoZmxvYXQoY29sKSArIDAuNSwgZmxvYXQocm93KSArIDAuNSkgLyAyLjApO1xuICAgIH1cblxuICAgIC8vIEhlbHBlciBmdW5jdGlvbiB0byBjYWxjdWxhdGUgZGlzdGFuY2UgdG8gYSBjaXJjbGVcbiAgICBmbG9hdCBkaXN0VG9DaXJjbGUodmVjMiBwb2ludCwgdmVjMiBjZW50ZXIpIHtcbiAgICAgIHJldHVybiBsZW5ndGgocG9pbnQgLSBjZW50ZXIpO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBhIHNtb290aCBtaW5pbXVtIGZ1bmN0aW9uIHRvIGJsZW5kIHRoZSBjb25uZWN0b3JcbiAgICBmbG9hdCBzbWluKGZsb2F0IGEsIGZsb2F0IGIsIGZsb2F0IGspIHtcbiAgICAgIGZsb2F0IGggPSBtYXgoayAtIGFicyhhIC0gYiksIDAuMCkgLyBrO1xuICAgICAgcmV0dXJuIG1pbihhLCBiKSAtIGggKiBoICogayAqIDAuMjU7XG4gICAgfVxuXG4gICAgdm9pZCBtYWluKCkge1xuICAgICAgLy8gSWYgbm8gY29ubmVjdG9yIGlzIGFjdGl2ZSwgZGlzY2FyZCBpbW1lZGlhdGVseVxuICAgICAgaWYgKHVfYWN0aXZlQ29ubmVjdG9yIDwgMC41KSB7XG4gICAgICAgIGRpc2NhcmQ7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIGdyaWQgcG9zaXRpb25zICgyeDIgZ3JpZClcbiAgICAgIGZsb2F0IGdyaWRPZmZzZXQgPSB1X3NwYWNpbmcgKiAwLjU7XG4gICAgICB2ZWMyIGNlbnRlcl9BID0gdmVjMigtZ3JpZE9mZnNldCwgZ3JpZE9mZnNldCk7ICAgLy8gVG9wLWxlZnQgKEEpXG4gICAgICB2ZWMyIGNlbnRlcl9CID0gdmVjMihncmlkT2Zmc2V0LCAtZ3JpZE9mZnNldCk7ICAgLy8gQm90dG9tLXJpZ2h0IChCKVxuICAgICAgdmVjMiBjZW50ZXJfQyA9IHZlYzIoLWdyaWRPZmZzZXQsIC1ncmlkT2Zmc2V0KTsgIC8vIEJvdHRvbS1sZWZ0IChDKVxuICAgICAgdmVjMiBjZW50ZXJfRCA9IHZlYzIoZ3JpZE9mZnNldCwgZ3JpZE9mZnNldCk7ICAgIC8vIFRvcC1yaWdodCAoRClcblxuICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlcyBmcm9tIGN1cnJlbnQgcGl4ZWwgdG8gZWFjaCBjaXJjbGUgY2VudGVyXG4gICAgICBmbG9hdCBkaXN0X0EgPSBkaXN0VG9DaXJjbGUodldvcmxkUG9zLCBjZW50ZXJfQSk7XG4gICAgICBmbG9hdCBkaXN0X0IgPSBkaXN0VG9DaXJjbGUodldvcmxkUG9zLCBjZW50ZXJfQik7XG4gICAgICBmbG9hdCBkaXN0X0MgPSBkaXN0VG9DaXJjbGUodldvcmxkUG9zLCBjZW50ZXJfQyk7XG4gICAgICBmbG9hdCBkaXN0X0QgPSBkaXN0VG9DaXJjbGUodldvcmxkUG9zLCBjZW50ZXJfRCk7XG5cbiAgICAgIC8vIEdldCBjaXJjbGUgc3RhdGVzXG4gICAgICB2ZWM0IHN0YXRlQSA9IGdldEdyaWRTdGF0ZSgwLCAwKTsgLy8gVG9wLWxlZnRcbiAgICAgIHZlYzQgc3RhdGVCID0gZ2V0R3JpZFN0YXRlKDEsIDEpOyAvLyBCb3R0b20tcmlnaHRcbiAgICAgIHZlYzQgc3RhdGVDID0gZ2V0R3JpZFN0YXRlKDEsIDApOyAvLyBCb3R0b20tbGVmdFxuICAgICAgdmVjNCBzdGF0ZUQgPSBnZXRHcmlkU3RhdGUoMCwgMSk7IC8vIFRvcC1yaWdodFxuXG4gICAgICAvLyBDaGVjayBpZiByZWxldmFudCBjaXJjbGVzIGFyZSBhY3RpdmUgXG4gICAgICBib29sIGNpcmNsZUFJbm5lckFjdGl2ZSA9IHN0YXRlQS5yID4gMC41OyAvLyBUb3AtbGVmdCBpbm5lciBjaXJjbGVcbiAgICAgIGJvb2wgY2lyY2xlQklubmVyQWN0aXZlID0gc3RhdGVCLnIgPiAwLjU7IC8vIEJvdHRvbS1yaWdodCBpbm5lciBjaXJjbGVcbiAgICAgIGJvb2wgY2lyY2xlQ0lubmVyQWN0aXZlID0gc3RhdGVDLnIgPiAwLjU7IC8vIEJvdHRvbS1sZWZ0IGlubmVyIGNpcmNsZVxuICAgICAgYm9vbCBjaXJjbGVESW5uZXJBY3RpdmUgPSBzdGF0ZUQuciA+IDAuNTsgLy8gVG9wLXJpZ2h0IGlubmVyIGNpcmNsZVxuICAgICAgXG4gICAgICAvLyBEZXRlcm1pbmUgd2hpY2ggY29ubmVjdG9yIHRvIGRyYXcgYmFzZWQgb24gYWN0aXZlIGNvbm5lY3RvciBzdGF0ZVxuICAgICAgYm9vbCBkcmF3QUJDb25uZWN0b3IgPSB1X2FjdGl2ZUNvbm5lY3RvciA9PSAxLjA7XG4gICAgICBib29sIGRyYXdDRENvbm5lY3RvciA9IHVfYWN0aXZlQ29ubmVjdG9yID09IDIuMDtcbiAgICAgIFxuICAgICAgLy8gVmVyaWZ5IHRoZSByZXF1aXJlZCBjaXJjbGVzIGFyZSBhY3RpdmUgZm9yIHRoZSBzZWxlY3RlZCBjb25uZWN0b3JcbiAgICAgIGlmIChkcmF3QUJDb25uZWN0b3IgJiYgKCFjaXJjbGVBSW5uZXJBY3RpdmUgfHwgIWNpcmNsZUJJbm5lckFjdGl2ZSkpIHtcbiAgICAgICAgZGlzY2FyZDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoZHJhd0NEQ29ubmVjdG9yICYmICghY2lyY2xlQ0lubmVyQWN0aXZlIHx8ICFjaXJjbGVESW5uZXJBY3RpdmUpKSB7XG4gICAgICAgIGRpc2NhcmQ7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gRGlzdGFuY2UgZmllbGRzIGZvciB0aGUgaW5uZXIgYmxhY2sgY2lyY2xlc1xuICAgICAgZmxvYXQgc2RmQSA9IGRpc3RfQSAtIHVfcmFkaXVzQjtcbiAgICAgIGZsb2F0IHNkZkIgPSBkaXN0X0IgLSB1X3JhZGl1c0I7XG4gICAgICBmbG9hdCBzZGZDID0gZGlzdF9DIC0gdV9yYWRpdXNCO1xuICAgICAgZmxvYXQgc2RmRCA9IGRpc3RfRCAtIHVfcmFkaXVzQjtcbiAgICAgIFxuICAgICAgLy8gV2Ugb25seSBjb250aW51ZSBpZiB3ZSdyZSBvdXRzaWRlIHRoZSByZWxldmFudCBibGFjayBjaXJjbGVzXG4gICAgICBib29sIG91dHNpZGVSZWxldmFudENpcmNsZXMgPSB0cnVlO1xuICAgICAgXG4gICAgICBpZiAoZHJhd0FCQ29ubmVjdG9yKSB7XG4gICAgICAgIG91dHNpZGVSZWxldmFudENpcmNsZXMgPSAoc2RmQSA+IDAuMCkgJiYgKHNkZkIgPiAwLjApO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoZHJhd0NEQ29ubmVjdG9yKSB7XG4gICAgICAgIG91dHNpZGVSZWxldmFudENpcmNsZXMgPSAoc2RmQyA+IDAuMCkgJiYgKHNkZkQgPiAwLjApO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoIW91dHNpZGVSZWxldmFudENpcmNsZXMpIHtcbiAgICAgICAgZGlzY2FyZDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDaGVjayBpZiBpbnNpZGUgaW5mbHVlbmNlIGFyZWFzXG4gICAgICBib29sIGluc2lkZUluZmx1ZW5jZUFyZWEgPSBmYWxzZTtcbiAgICAgIFxuICAgICAgaWYgKGRyYXdBQkNvbm5lY3Rvcikge1xuICAgICAgICAvLyBGb3IgUmVkIEFCIGNvbm5lY3RvcjpcbiAgICAgICAgLy8gTXVzdCBiZSBvdXRzaWRlIGlubmVyIEIgY2lyY2xlcyAod2UgYWxyZWFkeSBjaGVja2VkIHRoaXMgd2l0aCBvdXRzaWRlUmVsZXZhbnRDaXJjbGVzKVxuICAgICAgICAvLyBNdXN0IGJlIG91dHNpZGUgb3V0ZXIgQSBjaXJjbGVzIChyZXByZXNlbnRlZCBieSB0aGUgZ3JheSBjaXJjbGVzKVxuICAgICAgICAvLyBOb3RpY2UgaG93IHdlJ3JlIGNoZWNraW5nIGlmIHdlJ3JlIG91dHNpZGUgYm90aCBvdXRlciBBIGNpcmNsZXMgKEMgYW5kIEQpXG4gICAgICAgIGluc2lkZUluZmx1ZW5jZUFyZWEgPSAoZGlzdF9DID4gdV9yYWRpdXNBKSAmJiAoZGlzdF9EID4gdV9yYWRpdXNBKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKGRyYXdDRENvbm5lY3Rvcikge1xuICAgICAgICAvLyBGb3IgQmx1ZSBDRCBjb25uZWN0b3I6XG4gICAgICAgIC8vIE11c3QgYmUgb3V0c2lkZSBpbm5lciBBIGNpcmNsZXMgKHdlIGFscmVhZHkgY2hlY2tlZCB0aGlzIHdpdGggb3V0c2lkZVJlbGV2YW50Q2lyY2xlcylcbiAgICAgICAgLy8gTXVzdCBiZSBvdXRzaWRlIG91dGVyIEIgY2lyY2xlcyAocmVwcmVzZW50ZWQgYnkgdGhlIGdyYXkgY2lyY2xlcylcbiAgICAgICAgLy8gTm90aWNlIGhvdyB3ZSdyZSBjaGVja2luZyBpZiB3ZSdyZSBvdXRzaWRlIGJvdGggb3V0ZXIgQiBjaXJjbGVzIChBIGFuZCBCKVxuICAgICAgICBpbnNpZGVJbmZsdWVuY2VBcmVhID0gKGRpc3RfQSA+IHVfcmFkaXVzQSkgJiYgKGRpc3RfQiA+IHVfcmFkaXVzQSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICghaW5zaWRlSW5mbHVlbmNlQXJlYSkge1xuICAgICAgICBkaXNjYXJkO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSB2ZWN0b3IgYmV0d2VlbiB0aGUgYWN0aXZlIGNpcmNsZXNcbiAgICAgIHZlYzIgYWN0aXZlRGlyZWN0aW9uO1xuICAgICAgdmVjMiBzdGFydENlbnRlcjtcbiAgICAgIHZlYzIgZW5kQ2VudGVyO1xuICAgICAgZmxvYXQgZGlzdFN0YXJ0O1xuICAgICAgZmxvYXQgZGlzdEVuZDtcbiAgICAgIFxuICAgICAgaWYgKGRyYXdBQkNvbm5lY3Rvcikge1xuICAgICAgICBhY3RpdmVEaXJlY3Rpb24gPSBjZW50ZXJfQiAtIGNlbnRlcl9BO1xuICAgICAgICBzdGFydENlbnRlciA9IGNlbnRlcl9BO1xuICAgICAgICBlbmRDZW50ZXIgPSBjZW50ZXJfQjtcbiAgICAgICAgZGlzdFN0YXJ0ID0gZGlzdF9BO1xuICAgICAgICBkaXN0RW5kID0gZGlzdF9CO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoZHJhd0NEQ29ubmVjdG9yKSB7XG4gICAgICAgIGFjdGl2ZURpcmVjdGlvbiA9IGNlbnRlcl9EIC0gY2VudGVyX0M7XG4gICAgICAgIHN0YXJ0Q2VudGVyID0gY2VudGVyX0M7XG4gICAgICAgIGVuZENlbnRlciA9IGNlbnRlcl9EO1xuICAgICAgICBkaXN0U3RhcnQgPSBkaXN0X0M7XG4gICAgICAgIGRpc3RFbmQgPSBkaXN0X0Q7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIENvbnRpbnVlIHdpdGggZXhpc3RpbmcgY29ubmVjdG9yIGxvZ2ljLCBidXQgdXNlIHRoZSBhY3RpdmUgY2VudGVyc1xuICAgICAgZmxvYXQgbGVuZ3RoQUIgPSBsZW5ndGgoYWN0aXZlRGlyZWN0aW9uKTtcbiAgICAgIHZlYzIgQUJfbm9ybWFsaXplZCA9IGFjdGl2ZURpcmVjdGlvbiAvIGxlbmd0aEFCO1xuICAgICAgXG4gICAgICAvLyBQcm9qZWN0IGN1cnJlbnQgcG9pbnQgb250byBsaW5lXG4gICAgICB2ZWMyIEFQID0gdldvcmxkUG9zIC0gc3RhcnRDZW50ZXI7XG4gICAgICBmbG9hdCBwcm9qZWN0aW9uID0gZG90KEFQLCBBQl9ub3JtYWxpemVkKTtcbiAgICAgIFxuICAgICAgLy8gQ3JlYXRlIGEgZmllbGQgdGhhdCByZXByZXNlbnRzIHRoZSBcInBhdGh3YXlcIiBiZXR3ZWVuIHRoZSB0d28gY2lyY2xlc1xuICAgICAgLy8gVGhpcyBjcmVhdGVzIGEgY3VydmVkIHNoYXBlIHRoYXQgbmFycm93cyBpbiB0aGUgbWlkZGxlXG4gICAgICBmbG9hdCBwYXRod2F5RmllbGQ7XG4gICAgICBcbiAgICAgIC8vIEZvciB0aGUgZmlyc3QgcGFydCBvZiB0aGUgY3VydmF0dXJlIHJhbmdlLCB1c2UgZGlzdGFuY2UtYmFzZWQgc2hhcGVcbiAgICAgIGlmICh1X2N1cnZhdHVyZSA8IDAuNSkge1xuICAgICAgICAvLyBNZXRob2QgMTogUGF0aCB3aXRoIHZhcnlpbmcgd2lkdGggYmFzZWQgb24gcHJvamVjdGlvbiBhbG9uZyBBQlxuICAgICAgICBcbiAgICAgICAgLy8gT25seSBwcm9jZWVkIGlmIHRoZSBwaXhlbCBpcyByZWFzb25hYmx5IG5lYXIgdGhlIEFCIGxpbmVcbiAgICAgICAgaWYgKHByb2plY3Rpb24gPj0gLXVfcmFkaXVzQSAmJiBwcm9qZWN0aW9uIDw9IGxlbmd0aEFCICsgdV9yYWRpdXNBKSB7XG4gICAgICAgICAgLy8gQ2FsY3VsYXRlIHBlcnBlbmRpY3VsYXIgZGlzdGFuY2UgZnJvbSBwb2ludCB0byBBQiBsaW5lXG4gICAgICAgICAgdmVjMiBwZXJwZW5kaWN1bGFyID0gQVAgLSBwcm9qZWN0aW9uICogQUJfbm9ybWFsaXplZDtcbiAgICAgICAgICBmbG9hdCBwZXJwRGlzdGFuY2UgPSBsZW5ndGgocGVycGVuZGljdWxhcik7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQmFzZSB3aWR0aCBiYXNlZCBvbiB0aGlja25lc3NcbiAgICAgICAgICBmbG9hdCBiYXNlV2lkdGggPSB1X3RoaWNrbmVzcyAqIHVfcmFkaXVzQTtcbiAgICAgICAgICBmbG9hdCBtaWRQb2ludCA9IGxlbmd0aEFCICogMC41O1xuICAgICAgICAgIGZsb2F0IGRpc3RGcm9tTWlkID0gYWJzKHByb2plY3Rpb24gLSBtaWRQb2ludCk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gTWFrZSBuYXJyb3dlciBpbiBtaWRkbGUgYmFzZWQgb24gY3VydmF0dXJlXG4gICAgICAgICAgZmxvYXQgdCA9IGRpc3RGcm9tTWlkIC8gbWlkUG9pbnQ7IC8vIDAgYXQgY2VudGVyLCAxIGF0IGVuZHBvaW50c1xuICAgICAgICAgIGZsb2F0IG5hcnJvd2luZ0ZhY3RvciA9IG1peCgwLjUsIDAuOSwgdV9jdXJ2YXR1cmUgKiAyLjApOyAvLyBNb3JlIG5hcnJvdyBhdCBoaWdoZXIgY3VydmF0dXJlXG4gICAgICAgICAgZmxvYXQgd2lkdGhDdXJ2ZSA9IDEuMCAtIHBvdyh0LCAxLjUpICogbmFycm93aW5nRmFjdG9yO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYWRqdXN0ZWQgd2lkdGggYmFzZWQgb24gcG9zaXRpb25cbiAgICAgICAgICBmbG9hdCBhZGp1c3RlZFdpZHRoO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChwcm9qZWN0aW9uIDwgMC4wKSB7XG4gICAgICAgICAgICAvLyBOZWFyIGVuZHBvaW50IEEgLSBibGVuZCB3aXRoIGNpcmNsZVxuICAgICAgICAgICAgYWRqdXN0ZWRXaWR0aCA9IG1peCh1X3JhZGl1c0EgKiAwLjgsIGJhc2VXaWR0aCwgMS4wICsgcHJvamVjdGlvbiAvIHVfcmFkaXVzQSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChwcm9qZWN0aW9uID4gbGVuZ3RoQUIpIHtcbiAgICAgICAgICAgIC8vIE5lYXIgZW5kcG9pbnQgQiAtIGJsZW5kIHdpdGggY2lyY2xlXG4gICAgICAgICAgICBhZGp1c3RlZFdpZHRoID0gbWl4KHVfcmFkaXVzQSAqIDAuOCwgYmFzZVdpZHRoLCAxLjAgLSAocHJvamVjdGlvbiAtIGxlbmd0aEFCKSAvIHVfcmFkaXVzQSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEJldHdlZW4gZW5kcG9pbnRzIC0gdXNlIGN1cnZlZCB3aWR0aFxuICAgICAgICAgICAgYWRqdXN0ZWRXaWR0aCA9IGJhc2VXaWR0aCAqIHdpZHRoQ3VydmU7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIElmIHdpdGhpbiB0aGUgYWRqdXN0ZWQgd2lkdGgsIHdlJ3JlIGluIHRoZSBjb25uZWN0b3JcbiAgICAgICAgICBpZiAocGVycERpc3RhbmNlIDwgYWRqdXN0ZWRXaWR0aCkge1xuICAgICAgICAgICAgLy8gU2V0IGNvbG9yIGJhc2VkIG9uIHdoaWNoIGNvbm5lY3RvciBpcyBiZWluZyBkcmF3blxuICAgICAgICAgICAgaWYgKGRyYXdBQkNvbm5lY3Rvcikge1xuICAgICAgICAgICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KDEuMCwgMC4wLCAwLjAsIDEuMCk7IC8vIFJlZCBmb3IgQUIgY29ubmVjdG9yXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KDAuMCwgMC41LCAxLjAsIDEuMCk7IC8vIEJsdWUgZm9yIENEIGNvbm5lY3RvclxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIC8vIE1ldGhvZCAyOiBVc2UgaHlwZXJib2xpYyBkaXN0YW5jZSBmaWVsZCBmb3IgaGlnaGVyIGN1cnZhdHVyZVxuICAgICAgICAvLyBOb3JtYWxpemUgZGlzdGFuY2VzIGZvciBiZXR0ZXIgY29udHJvbFxuICAgICAgICBmbG9hdCBkMSA9IG1heCgwLjAsIGRpc3RTdGFydCAtIHVfcmFkaXVzQikgLyB1X3JhZGl1c0E7IFxuICAgICAgICBmbG9hdCBkMiA9IG1heCgwLjAsIGRpc3RFbmQgLSB1X3JhZGl1c0IpIC8gdV9yYWRpdXNBO1xuICAgICAgICBcbiAgICAgICAgLy8gQ3JlYXRlIGh5cGVyYm9saWMgZmllbGQgKHByb2R1Y3Qgb2YgZGlzdGFuY2VzKVxuICAgICAgICBwYXRod2F5RmllbGQgPSBkMSAqIGQyO1xuICAgICAgICBcbiAgICAgICAgLy8gQWRqdXN0IGZpZWxkIHN0cmVuZ3RoIGJhc2VkIG9uIGRpc3RhbmNlIHRvIG1ha2Ugc2hhcGUgbW9yZSBjb21wYWN0XG4gICAgICAgIGZsb2F0IGRpc3RhbmNlU2NhbGUgPSAzLjAgLyBsZW5ndGhBQjtcbiAgICAgICAgcGF0aHdheUZpZWxkICo9IGRpc3RhbmNlU2NhbGU7XG4gICAgICAgIFxuICAgICAgICAvLyBUaGlja25lc3MgY29udHJvbHMgdGhlIHRocmVzaG9sZFxuICAgICAgICBmbG9hdCB0aHJlc2hvbGQgPSB1X3RoaWNrbmVzcyAqIDAuMiAqIG1peCgxLjAsIDIuMCwgdV9jdXJ2YXR1cmUgLSAwLjUpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2hlY2sgaWYgd2l0aGluIHRoZSBmaWVsZCB0aHJlc2hvbGRcbiAgICAgICAgaWYgKHBhdGh3YXlGaWVsZCA8IHRocmVzaG9sZCkge1xuICAgICAgICAgIC8vIE9ubHkgc2hvdyBjb25uZWN0b3IgYmV0d2VlbiB0aGUgY2lyY2xlcyAobm90IGV4dGVuZGluZyBvdXQgdGhlIG90aGVyIHNpZGVzKVxuICAgICAgICAgIGZsb2F0IGRvdFByb2R1Y3RBID0gZG90KEFQLCBBQl9ub3JtYWxpemVkKTtcbiAgICAgICAgICBmbG9hdCBkb3RQcm9kdWN0QiA9IGRvdCh2V29ybGRQb3MgLSBlbmRDZW50ZXIsIC1BQl9ub3JtYWxpemVkKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoZG90UHJvZHVjdEEgPj0gLXVfcmFkaXVzQiAqIDAuNSAmJiBkb3RQcm9kdWN0QiA+PSAtdV9yYWRpdXNCICogMC41KSB7XG4gICAgICAgICAgICAvLyBTZXQgY29sb3IgYmFzZWQgb24gd2hpY2ggY29ubmVjdG9yIGlzIGJlaW5nIGRyYXduXG4gICAgICAgICAgICBpZiAoZHJhd0FCQ29ubmVjdG9yKSB7XG4gICAgICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoMS4wLCAwLjAsIDAuMCwgMS4wKTsgLy8gUmVkIGZvciBBQiBjb25uZWN0b3JcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoMC4wLCAwLjUsIDEuMCwgMS4wKTsgLy8gQmx1ZSBmb3IgQ0QgY29ubmVjdG9yXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIElmIHdlIGdvdCBoZXJlLCB0aGUgcGl4ZWwgaXMgb3V0c2lkZSB0aGUgY29ubmVjdG9yIHNoYXBlXG4gICAgICBkaXNjYXJkO1xuICAgIH1cbiAgYFxuKTtcblxuLy8gQWRkIGEgdW5pcXVlIGtleSBmb3IgSE1SIHB1cnBvc2VzIHdpdGggUjNGXG5HcmlkQ29ubmVjdG9yTWF0ZXJpYWwua2V5ID0gVEhSRUUuTWF0aFV0aWxzLmdlbmVyYXRlVVVJRCgpO1xuXG5leHBvcnQgeyBHcmlkQ29ubmVjdG9yTWF0ZXJpYWwgfTsgIl0sIm5hbWVzIjpbIlRIUkVFIiwic2hhZGVyTWF0ZXJpYWwiLCJHcmlkQ29ubmVjdG9yTWF0ZXJpYWwiLCJ1X3JhZGl1c0IiLCJ1X3JhZGl1c0EiLCJ1X3NwYWNpbmciLCJ1X3RoaWNrbmVzcyIsInVfY3VydmF0dXJlIiwidV9yZXNvbHV0aW9uIiwiVmVjdG9yMiIsInVfYWN0aXZlQ29ubmVjdG9yIiwidV9ncmlkU3RhdGUiLCJEYXRhVGV4dHVyZSIsIkZsb2F0MzJBcnJheSIsIlJHQkFGb3JtYXQiLCJGbG9hdFR5cGUiLCJrZXkiLCJNYXRoVXRpbHMiLCJnZW5lcmF0ZVVVSUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/GridConnectorMaterial.js\n");

/***/ }),

/***/ "./components/SimpleConnectorMaterial.js":
/*!***********************************************!*\
  !*** ./components/SimpleConnectorMaterial.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SimpleConnectorMaterial: () => (/* binding */ SimpleConnectorMaterial)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_0__]);\nthree__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// A very simple connector material for debugging\nconst SimpleConnectorMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_1__.shaderMaterial)(// Uniforms\n{\n    u_radiusB: 0.4,\n    u_radiusA: 0.5,\n    u_boxSize: 0.5,\n    u_spacing: 0.89,\n    u_activeConnector: 0,\n    u_gridState: new three__WEBPACK_IMPORTED_MODULE_0__.DataTexture(new Float32Array(4), 2, 2, three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat, three__WEBPACK_IMPORTED_MODULE_0__.FloatType)\n}, // Vertex Shader\n/*glsl*/ `\n    varying vec2 vUv;\n    varying vec2 vWorldPos;\n\n    void main() {\n      vUv = uv;\n\n      // World position of the vertex\n      vec4 worldPos = modelMatrix * vec4(position, 1.0);\n      vWorldPos = worldPos.xy;\n\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `, // Fragment Shader\n/*glsl*/ `\n    varying vec2 vUv;\n    varying vec2 vWorldPos; // Pixel position in world space\n\n    uniform float u_radiusB; // Radius for target circles B1, B2\n    uniform float u_radiusA; // Radius for defining circles A1, A2\n    uniform float u_boxSize; // Receive box size from JS\n    uniform float u_spacing; // Grid spacing between centers\n    uniform float u_activeConnector; // 0 = none, 1 = red (AB), 2 = blue (CD)\n    uniform sampler2D u_gridState; // Grid state texture\n\n    // Helper function to get circle state from the grid state texture\n    vec4 getGridState(int row, int col) {\n      return texture2D(u_gridState, vec2(float(col) + 0.5, float(row) + 0.5) / 2.0);\n    }\n\n    // SDF for a 2D circle\n    float sdCircle( vec2 p, vec2 c, float r ) {\n        return length(p-c) - r;\n    }\n\n    // SDF for a 2D Box\n    // p: point, c: center, b: half-size\n    float sdBox( vec2 p, vec2 c, vec2 b ) {\n        vec2 q = abs(p - c) - b;\n        return length(max(q,0.0)) + min(max(q.x,q.y),0.0);\n    }\n\n    // Smooth minimum function (use log/exp, base-e is fine)\n    float smin( float a, float b, float k ) {\n        float h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n        return mix( b, a, h ) - k*h*(1.0-h);\n        // Alternative formulation using exp:\n        // k = max(k, 0.0001); // Ensure k is positive\n        // return -log(exp(-k*a) + exp(-k*b))/k;\n    }\n\n    void main() {\n      // If no connector is active, discard immediately\n      if (u_activeConnector < 0.5) {\n        discard;\n        return;\n      }\n      \n      // Check if relevant circles are active\n      vec4 stateA = getGridState(0, 0); // Top-left\n      vec4 stateB = getGridState(1, 1); // Bottom-right\n      vec4 stateC = getGridState(1, 0); // Bottom-left  \n      vec4 stateD = getGridState(0, 1); // Top-right\n      \n      // Check if inner circles are active (red channel = inner circle)\n      bool circleB1Active = stateA.r > 0.5; // Top-left inner circle\n      bool circleB2Active = stateB.r > 0.5; // Bottom-right inner circle\n      bool circleA1Active = stateC.r > 0.5; // Bottom-left inner circle\n      bool circleA2Active = stateD.r > 0.5; // Top-right inner circle\n      \n      // Determine which connector to draw based on active connector state\n      bool drawRedConnector = u_activeConnector == 1.0;\n      bool drawBlueConnector = u_activeConnector == 2.0;\n      \n      // Verify the required circles are active for the selected connector\n      if (drawRedConnector && (!circleB1Active || !circleB2Active)) {\n        discard;\n        return;\n      }\n      \n      if (drawBlueConnector && (!circleA1Active || !circleA2Active)) {\n        discard;\n        return;\n      }\n    \n      // Calculate offset based on half the grid spacing\n      float offset = u_spacing * 0.5;\n      \n      // Define circle centers dynamically based on grid spacing\n      vec2 centerB1 = vec2(-offset, offset);    // Top-left\n      vec2 centerB2 = vec2(offset, -offset);    // Bottom-right\n      vec2 centerA1 = vec2(-offset, -offset);   // Bottom-left\n      vec2 centerA2 = vec2(offset, offset);     // Top-right\n\n      // Calculate SDFs for each circle - both inner and outer radii\n      // Inner circles (B radius)\n      float sdB1Inner = sdCircle(vWorldPos, centerB1, u_radiusB);\n      float sdB2Inner = sdCircle(vWorldPos, centerB2, u_radiusB);\n      float sdA1Inner = sdCircle(vWorldPos, centerA1, u_radiusB);\n      float sdA2Inner = sdCircle(vWorldPos, centerA2, u_radiusB);\n      \n      // Outer circles (A radius)\n      float sdB1Outer = sdCircle(vWorldPos, centerB1, u_radiusA);\n      float sdB2Outer = sdCircle(vWorldPos, centerB2, u_radiusA);\n      float sdA1Outer = sdCircle(vWorldPos, centerA1, u_radiusA);\n      float sdA2Outer = sdCircle(vWorldPos, centerA2, u_radiusA);\n      \n      // Calculate SDF for a bounding box using the uniform size\n      vec2 boxCenter = vec2(0.0);\n      vec2 boxHalfSize = vec2(u_boxSize);\n      float sdfBoundingBox = sdBox(vWorldPos, boxCenter, boxHalfSize);\n      \n      // Calculate connector shapes based on the new specifications\n      \n      // Red connector (B1-B2 diagonal):\n      // - Must be outside inner B circles (B1 and B2)\n      // - Must be outside outer A circles (A1 and A2)\n      float sdRedConnector = 1.0;\n      if (drawRedConnector) {\n        bool outsideInnerB = (sdB1Inner > 0.0) && (sdB2Inner > 0.0);\n        bool outsideOuterA = (sdA1Outer > 0.0) && (sdA2Outer > 0.0);\n        \n        if (outsideInnerB && outsideOuterA && sdfBoundingBox < 0.0) {\n          sdRedConnector = -1.0; // Inside the connector\n        }\n      }\n      \n      // Blue connector (A1-A2 diagonal):\n      // - Must be outside inner A circles (A1 and A2)\n      // - Must be outside outer B circles (B1 and B2)\n      float sdBlueConnector = 1.0;\n      if (drawBlueConnector) {\n        bool outsideInnerA = (sdA1Inner > 0.0) && (sdA2Inner > 0.0);\n        bool outsideOuterB = (sdB1Outer > 0.0) && (sdB2Outer > 0.0);\n        \n        if (outsideInnerA && outsideOuterB && sdfBoundingBox < 0.0) {\n          sdBlueConnector = -1.0; // Inside the connector\n        }\n      }\n      \n      // Determine if we're inside either connector\n      if (sdRedConnector < 0.0 || sdBlueConnector < 0.0) {\n        // Choose color based on which connector we're inside\n        if (sdRedConnector < 0.0) {\n          // Red connector\n          gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // Red\n        } else {\n          // Blue connector\n          gl_FragColor = vec4(0.0, 0.5, 1.0, 1.0); // Blue\n        }\n      } else {\n        discard; // Outside both connectors\n      }\n    }\n  `);\n// Add a unique key for HMR purposes with R3F\nSimpleConnectorMaterial.key = three__WEBPACK_IMPORTED_MODULE_0__.MathUtils.generateUUID();\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/SimpleConnectorMaterial.js\n");

/***/ }),

/***/ "./components/WebGLCanvas.js":
/*!***********************************!*\
  !*** ./components/WebGLCanvas.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebGLCanvas)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"@react-three/fiber\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-three/drei */ \"@react-three/drei\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_react_three_drei__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var leva__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! leva */ \"leva\");\n/* harmony import */ var leva__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(leva__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ConnectorMaterial */ \"./components/ConnectorMaterial.js\");\n/* harmony import */ var _GridConnectorMaterial__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./GridConnectorMaterial */ \"./components/GridConnectorMaterial.js\");\n/* harmony import */ var _SimpleConnectorMaterial__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SimpleConnectorMaterial */ \"./components/SimpleConnectorMaterial.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_4__, _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__, _GridConnectorMaterial__WEBPACK_IMPORTED_MODULE_7__, _SimpleConnectorMaterial__WEBPACK_IMPORTED_MODULE_8__]);\n([three__WEBPACK_IMPORTED_MODULE_4__, _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__, _GridConnectorMaterial__WEBPACK_IMPORTED_MODULE_7__, _SimpleConnectorMaterial__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n // Import leva with button instead of monitor\n // We'll create this shader material\n // Import our new connector material\n // Import simple connector for debugging\n// Extend THREE namespace with our custom shader materials\n(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.extend)({\n    ConnectorMaterial: _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__.ConnectorMaterial,\n    GridConnectorMaterial: _GridConnectorMaterial__WEBPACK_IMPORTED_MODULE_7__.GridConnectorMaterial,\n    SimpleConnectorMaterial: _SimpleConnectorMaterial__WEBPACK_IMPORTED_MODULE_8__.SimpleConnectorMaterial\n});\nconst GRID_SIZE = 2;\nconst TOTAL_INSTANCES = GRID_SIZE * GRID_SIZE;\n// Helper to convert grid coords to instance ID\nconst getInstanceId = (row, col)=>row * GRID_SIZE + col;\n// Helper to convert instance ID to grid coords\nconst getGridCoords = (id)=>({\n        row: Math.floor(id / GRID_SIZE),\n        col: id % GRID_SIZE\n    });\n// Create a reusable dummy object for matrix calculation\nconst dummy = new three__WEBPACK_IMPORTED_MODULE_4__.Object3D();\n// Fixed base values\nconst BASE_VALUES = {\n    radiusB: 0.4,\n    radiusA: 0.5,\n    boxSize: 0.5,\n    baseSpacing: 0.89 // Reference spacing for scaling\n};\nfunction Scene() {\n    // Controls for radius, spacing, and debugging\n    const { gridSpacing, zoom, debug, showSimple } = (0,leva__WEBPACK_IMPORTED_MODULE_5__.useControls)({\n        gridSpacing: {\n            value: 0.89,\n            min: 0.5,\n            max: 2.0,\n            step: 0.01,\n            label: \"Grid Spacing\"\n        },\n        zoom: {\n            value: 1.0,\n            min: 0.5,\n            max: 3.0,\n            step: 0.1,\n            label: \"Camera Zoom\"\n        },\n        debug: {\n            value: true,\n            label: \"Debug Mode\"\n        },\n        showSimple: {\n            value: true,\n            label: \"Use Simple Connector\"\n        }\n    });\n    // Calculate scaled values for display\n    const scaleFactor = gridSpacing / BASE_VALUES.baseSpacing;\n    const scaledRadiusB = (BASE_VALUES.radiusB * scaleFactor).toFixed(3);\n    const scaledRadiusA = (BASE_VALUES.radiusA * scaleFactor).toFixed(3);\n    const scaledBoxSize = (BASE_VALUES.boxSize * scaleFactor).toFixed(3);\n    // Display current values in a separate control panel\n    (0,leva__WEBPACK_IMPORTED_MODULE_5__.useControls)(\"Current Values\", {\n        innerRadius: {\n            value: scaledRadiusB,\n            label: \"Inner Radius (B)\",\n            disabled: true\n        },\n        outerRadius: {\n            value: scaledRadiusA,\n            label: \"Outer Radius (A)\",\n            disabled: true\n        },\n        boxSize: {\n            value: scaledBoxSize,\n            label: \"BBox Size\",\n            disabled: true\n        }\n    });\n    // State for the 2x2 grid visibility\n    const [gridState, setGridState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        // Initial state - all circles visible\n        [\n            {\n                showInner: true,\n                showOuter: true\n            },\n            {\n                showInner: true,\n                showOuter: true\n            }\n        ],\n        [\n            {\n                showInner: true,\n                showOuter: true\n            },\n            {\n                showInner: true,\n                showOuter: true\n            }\n        ]\n    ]);\n    // State for active connector - 0: none, 1: red (AB), 2: blue (CD)\n    const [activeConnector, setActiveConnector] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const materialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const instancedMeshRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const gridHelperRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const cameraRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    // Reference for connector material\n    const gridConnectorMaterialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const connectorMeshRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const debugMeshRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    // Reference for simple connector material (for debugging)\n    const simpleConnectorMaterialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const simpleConnectorMeshRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    // Attributes for instance visibility data\n    const instanceShowInner = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>new Float32Array(TOTAL_INSTANCES), []);\n    const instanceShowOuter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>new Float32Array(TOTAL_INSTANCES), []);\n    // Store positions for click detection\n    const instancePositions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(Array(TOTAL_INSTANCES).fill().map(()=>new three__WEBPACK_IMPORTED_MODULE_4__.Vector3()));\n    // Access three.js helpers\n    const { camera, raycaster, mouse } = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.useThree)();\n    // Log the grid state for debugging\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"Grid State:\", gridState);\n    }, [\n        gridState\n    ]);\n    // Create a data texture to store grid state for the connector shader\n    const gridStateTexture = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const data = new Float32Array(4 * 4); // RGBA for each of the 4 cells\n        const texture = new three__WEBPACK_IMPORTED_MODULE_4__.DataTexture(data, 2, 2, three__WEBPACK_IMPORTED_MODULE_4__.RGBAFormat, three__WEBPACK_IMPORTED_MODULE_4__.FloatType);\n        texture.needsUpdate = true;\n        return texture;\n    }, []);\n    // Update the grid state texture and uniforms when controls change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const data = gridStateTexture.image.data;\n        for(let row = 0; row < GRID_SIZE; row++){\n            for(let col = 0; col < GRID_SIZE; col++){\n                const idx = (row * GRID_SIZE + col) * 4;\n                data[idx] = gridState[row][col].showInner ? 1.0 : 0.0; // R - Inner circle\n                data[idx + 1] = gridState[row][col].showOuter ? 1.0 : 0.0; // G - Outer circle\n                data[idx + 2] = 0.0; // B - unused\n                data[idx + 3] = 1.0; // A - opacity\n            }\n        }\n        gridStateTexture.needsUpdate = true;\n        console.log(\"Updated grid state texture\", data);\n        // Calculate scale factor based on ratio to base grid spacing\n        const scaleFactor = gridSpacing / BASE_VALUES.baseSpacing;\n        // Update connector material uniforms (original grid one)\n        if (gridConnectorMaterialRef.current) {\n            gridConnectorMaterialRef.current.uniforms.u_radiusB.value = BASE_VALUES.radiusB * scaleFactor;\n            gridConnectorMaterialRef.current.uniforms.u_radiusA.value = BASE_VALUES.radiusA * scaleFactor;\n            gridConnectorMaterialRef.current.uniforms.u_spacing.value = gridSpacing;\n            gridConnectorMaterialRef.current.uniforms.u_gridState.value = gridStateTexture;\n            gridConnectorMaterialRef.current.uniforms.u_activeConnector = {\n                value: activeConnector\n            };\n            // Pass the connector thickness to the shader (if it exists - might remove later)\n            if (gridConnectorMaterialRef.current.uniforms.u_thickness) {\n            // gridConnectorMaterialRef.current.uniforms.u_thickness.value = connectorThickness; // Keep commented out for now\n            }\n            // Pass the curvature parameter (if it exists - might remove later)\n            if (gridConnectorMaterialRef.current.uniforms.u_curvature) {\n            // gridConnectorMaterialRef.current.uniforms.u_curvature.value = connectorCurvature; // Keep commented out for now\n            }\n        }\n        // Update simple connector material uniforms\n        if (simpleConnectorMaterialRef.current) {\n            // Scale the radius and box size values proportionally\n            simpleConnectorMaterialRef.current.uniforms.u_radiusB.value = BASE_VALUES.radiusB * scaleFactor;\n            simpleConnectorMaterialRef.current.uniforms.u_radiusA.value = BASE_VALUES.radiusA * scaleFactor;\n            simpleConnectorMaterialRef.current.uniforms.u_boxSize.value = BASE_VALUES.boxSize * scaleFactor;\n            simpleConnectorMaterialRef.current.uniforms.u_spacing.value = gridSpacing;\n            simpleConnectorMaterialRef.current.uniforms.u_gridState.value = gridStateTexture;\n            simpleConnectorMaterialRef.current.uniforms.u_activeConnector = {\n                value: activeConnector\n            };\n        }\n    }, [\n        gridState,\n        gridStateTexture,\n        gridSpacing,\n        debug,\n        showSimple,\n        activeConnector\n    ]);\n    // Update camera zoom based on control\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (camera) {\n            camera.zoom = 100 * (1 / zoom); // Adjust as needed for scale\n            camera.updateProjectionMatrix();\n        }\n    }, [\n        camera,\n        zoom\n    ]);\n    // Update instance matrices and visibility attributes based on state\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!instancedMeshRef.current) return;\n        let instanceId = 0;\n        // Calculate grid starting position\n        const startOffset = (GRID_SIZE - 1) * 0.5 * gridSpacing;\n        for(let row = 0; row < GRID_SIZE; row++){\n            for(let col = 0; col < GRID_SIZE; col++){\n                // Position at grid intersections\n                const x = col * gridSpacing - startOffset;\n                const y = -(row * gridSpacing - startOffset); // Y is inverted for screen coordinates\n                // Update the dummy object's position\n                dummy.position.set(x, y, 0);\n                dummy.updateMatrix();\n                // Set the instance matrix\n                instancedMeshRef.current.setMatrixAt(instanceId, dummy.matrix);\n                // Store position for click detection\n                instancePositions.current[instanceId].set(x, y, 0);\n                // Update visibility attributes\n                instanceShowInner[instanceId] = gridState[row][col].showInner ? 1.0 : 0.0;\n                instanceShowOuter[instanceId] = gridState[row][col].showOuter ? 1.0 : 0.0;\n                instanceId++;\n            }\n        }\n        // Mark attributes and matrix for update\n        instancedMeshRef.current.geometry.attributes.a_instanceShowInner.needsUpdate = true;\n        instancedMeshRef.current.geometry.attributes.a_instanceShowOuter.needsUpdate = true;\n        instancedMeshRef.current.instanceMatrix.needsUpdate = true;\n        // Update global uniforms with the radius values\n        if (materialRef.current) {\n            // Calculate scale factor based on ratio to base grid spacing\n            const scaleFactor = gridSpacing / BASE_VALUES.baseSpacing;\n            materialRef.current.uniforms.u_radiusB.value = BASE_VALUES.radiusB * scaleFactor;\n            materialRef.current.uniforms.u_radiusA.value = BASE_VALUES.radiusA * scaleFactor;\n            materialRef.current.uniforms.u_spacing.value = gridSpacing;\n        }\n        // Update grid helper to match spacing\n        if (gridHelperRef.current) {\n            gridHelperRef.current.scale.set(gridSpacing, gridSpacing, 1);\n        }\n    }, [\n        gridState,\n        gridSpacing,\n        instanceShowInner,\n        instanceShowOuter\n    ]);\n    // Handle click on the canvas\n    const handleClick = (event)=>{\n        if (!instancedMeshRef.current) return;\n        // Calculate scale factor based on ratio to base grid spacing\n        const scaleFactor = gridSpacing / BASE_VALUES.baseSpacing;\n        // Scale the radius values for hit detection\n        const scaledRadiusB = BASE_VALUES.radiusB * scaleFactor;\n        const scaledRadiusA = BASE_VALUES.radiusA * scaleFactor;\n        // Grid positions for detecting connector area\n        const gridOffset = gridSpacing * 0.5;\n        const centerA = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2(-gridOffset, gridOffset); // Top-left (A)\n        const centerB = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2(gridOffset, -gridOffset); // Bottom-right (B)\n        const centerC = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2(-gridOffset, -gridOffset); // Bottom-left (C)\n        const centerD = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2(gridOffset, gridOffset); // Top-right (D)\n        // Create a 2D point from the click event for easier calculations\n        const clickPoint = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2(event.point.x, event.point.y);\n        // Check if we clicked on a connector area\n        const isInABConnectorArea = isPointInConnectorArea(clickPoint, centerA, centerB, scaledRadiusB, scaledRadiusA);\n        const isInCDConnectorArea = isPointInConnectorArea(clickPoint, centerC, centerD, scaledRadiusB, scaledRadiusA);\n        if (isInABConnectorArea || isInCDConnectorArea) {\n            // Clicked in a connector area, cycle the active connector state\n            setActiveConnector((prevState)=>{\n                if (prevState === 0) {\n                    // None -> First connector (Red AB or Blue CD based on which area clicked)\n                    return isInABConnectorArea ? 1 : 2;\n                } else if (prevState === 1 && isInABConnectorArea) {\n                    // Red AB -> Blue CD\n                    return 2;\n                } else if (prevState === 2 && isInCDConnectorArea) {\n                    // Blue CD -> None\n                    return 0;\n                } else {\n                    // Toggle between current connector and None\n                    return prevState === 0 ? isInABConnectorArea ? 1 : 2 : 0;\n                }\n            });\n            return; // Exit after handling connector click\n        }\n        // If no instance was hit, return\n        if (event.instanceId === undefined) return;\n        const instanceId = event.instanceId;\n        const { row, col } = getGridCoords(instanceId);\n        console.log(`Clicked instance: row=${row}, col=${col}`);\n        const currentState = gridState[row][col];\n        // Get instance position from our stored reference\n        const instancePosition = instancePositions.current[instanceId];\n        // Create a copy of the click point\n        const pointCopy = event.point.clone();\n        // Calculate distance from click to instance center\n        const distFromCenter = pointCopy.distanceTo(instancePosition);\n        let newInner = currentState.showInner;\n        let newOuter = currentState.showOuter;\n        if (distFromCenter <= scaledRadiusB) {\n            // Clicked inner circle\n            newInner = !currentState.showInner;\n            console.log(`Toggling inner circle: ${currentState.showInner} -> ${newInner}`);\n            // Check if toggling off an inner circle that was part of an active connector\n            if (!newInner) {\n                // Top-left circle is part of red connector\n                if (row === 0 && col === 0 && activeConnector === 1) {\n                    setActiveConnector(0);\n                } else if (row === 1 && col === 1 && activeConnector === 1) {\n                    setActiveConnector(0);\n                } else if (row === 1 && col === 0 && activeConnector === 2) {\n                    setActiveConnector(0);\n                } else if (row === 0 && col === 1 && activeConnector === 2) {\n                    setActiveConnector(0);\n                }\n            } else if (newInner) {\n                // Only activate connector if no connector is currently active\n                if (activeConnector === 0) {\n                    // Check if this completes a diagonal pair - Red connector (top-left to bottom-right)\n                    if (row === 0 && col === 0 && gridState[1][1].showInner || row === 1 && col === 1 && gridState[0][0].showInner) {\n                        setActiveConnector(1); // Activate red connector\n                    } else if (row === 1 && col === 0 && gridState[0][1].showInner || row === 0 && col === 1 && gridState[1][0].showInner) {\n                        setActiveConnector(2); // Activate blue connector\n                    }\n                }\n            }\n        } else if (distFromCenter <= scaledRadiusA) {\n            // Clicked outer circle\n            newOuter = !currentState.showOuter;\n            console.log(`Toggling outer circle: ${currentState.showOuter} -> ${newOuter}`);\n        }\n        if (newInner !== currentState.showInner || newOuter !== currentState.showOuter) {\n            setGridState((prevState)=>{\n                const newState = JSON.parse(JSON.stringify(prevState)); // Deep copy\n                newState[row][col] = {\n                    showInner: newInner,\n                    showOuter: newOuter\n                };\n                return newState;\n            });\n        }\n    };\n    // Helper function to determine if a point is in the connector area\n    const isPointInConnectorArea = (point, center1, center2, innerRadius, outerRadius)=>{\n        // Check that point is not inside either inner circle\n        const distToCenter1 = point.distanceTo(center1);\n        const distToCenter2 = point.distanceTo(center2);\n        if (distToCenter1 < innerRadius || distToCenter2 < innerRadius) {\n            return false; // Inside an inner circle\n        }\n        // Project point onto the line connecting the centers\n        const direction = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2().subVectors(center2, center1).normalize();\n        const center1ToPoint = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2().subVectors(point, center1);\n        const projectionLength = center1ToPoint.dot(direction);\n        // Check if projection falls between the two centers (with some buffer)\n        const distanceBetweenCenters = center1.distanceTo(center2);\n        if (projectionLength < -outerRadius || projectionLength > distanceBetweenCenters + outerRadius) {\n            return false; // Outside the region between circles\n        }\n        // Calculate perpendicular distance from point to line\n        const projectedPoint = new three__WEBPACK_IMPORTED_MODULE_4__.Vector2().copy(center1).addScaledVector(direction, projectionLength);\n        const perpDistance = point.distanceTo(projectedPoint);\n        // Define a reasonable width for the connector area\n        const connectorWidth = outerRadius * 0.8;\n        return perpDistance < connectorWidth;\n    };\n    // Calculate plane size based on the grid size and spacing\n    const connectorPlaneSize = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>GRID_SIZE * gridSpacing + Math.max(BASE_VALUES.radiusA, BASE_VALUES.radiusB) * 2, [\n        gridSpacing,\n        BASE_VALUES.radiusA,\n        BASE_VALUES.radiusB\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            debug && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n                ref: debugMeshRef,\n                position: [\n                    0,\n                    0,\n                    -0.2\n                ],\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            connectorPlaneSize,\n                            connectorPlaneSize\n                        ]\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 386,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meshBasicMaterial\", {\n                        color: \"blue\",\n                        opacity: 0.1,\n                        transparent: true\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 387,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 385,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n                ref: simpleConnectorMeshRef,\n                position: [\n                    0,\n                    0,\n                    0.1\n                ],\n                visible: showSimple,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            connectorPlaneSize,\n                            connectorPlaneSize\n                        ]\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 393,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"simpleConnectorMaterial\", {\n                        ref: simpleConnectorMaterialRef,\n                        transparent: true,\n                        depthTest: false\n                    }, _SimpleConnectorMaterial__WEBPACK_IMPORTED_MODULE_8__.SimpleConnectorMaterial.key, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 394,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 392,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n                ref: connectorMeshRef,\n                position: [\n                    0,\n                    0,\n                    -0.1\n                ],\n                visible: !showSimple,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            connectorPlaneSize,\n                            connectorPlaneSize\n                        ]\n                    }, void 0, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 404,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"gridConnectorMaterial\", {\n                        ref: gridConnectorMaterialRef,\n                        transparent: true,\n                        depthTest: false\n                    }, _GridConnectorMaterial__WEBPACK_IMPORTED_MODULE_7__.GridConnectorMaterial.key, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 405,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 403,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"instancedMesh\", {\n                ref: instancedMeshRef,\n                args: [\n                    null,\n                    null,\n                    TOTAL_INSTANCES\n                ],\n                onClick: handleClick,\n                position: [\n                    0,\n                    0,\n                    0\n                ],\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                        args: [\n                            connectorPlaneSize,\n                            connectorPlaneSize\n                        ],\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"instancedBufferAttribute\", {\n                                attach: \"attributes-a_instanceShowInner\",\n                                args: [\n                                    instanceShowInner,\n                                    1\n                                ]\n                            }, void 0, false, {\n                                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                                lineNumber: 421,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"instancedBufferAttribute\", {\n                                attach: \"attributes-a_instanceShowOuter\",\n                                args: [\n                                    instanceShowOuter,\n                                    1\n                                ]\n                            }, void 0, false, {\n                                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                                lineNumber: 425,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 420,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"connectorMaterial\", {\n                        ref: materialRef,\n                        transparent: true\n                    }, _ConnectorMaterial__WEBPACK_IMPORTED_MODULE_6__.ConnectorMaterial.key, false, {\n                        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                        lineNumber: 430,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 414,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n                ref: gridHelperRef,\n                position: [\n                    0,\n                    0,\n                    -0.2\n                ],\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"gridHelper\", {\n                    args: [\n                        10,\n                        10\n                    ],\n                    rotation: [\n                        Math.PI / 2,\n                        0,\n                        0\n                    ]\n                }, void 0, false, {\n                    fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                    lineNumber: 439,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 438,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\nfunction WebGLCanvas() {\n    return(// Set up the R3F Canvas\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.Canvas, {\n        style: {\n            background: \"#f0f0f0\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_drei__WEBPACK_IMPORTED_MODULE_3__.OrthographicCamera, {\n                makeDefault: true,\n                zoom: 100,\n                position: [\n                    0,\n                    0,\n                    5\n                ],\n                rotation: [\n                    0,\n                    0,\n                    0\n                ]\n            }, void 0, false, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 453,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ambientLight\", {\n                intensity: 0.8\n            }, void 0, false, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 459,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Scene, {}, void 0, false, {\n                fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n                lineNumber: 460,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/ian/cursor_projects/webGL_meta/components/WebGLCanvas.js\",\n        lineNumber: 451,\n        columnNumber: 5\n    }, this));\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/WebGLCanvas.js\n");

/***/ })

};
;